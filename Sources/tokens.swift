
//
// tokens.swift
//

// Do not edit directly
// Generated on Wed, 23 Nov 2022 21:24:30 GMT


import UIKit

public enum DialtoneTokens {
    public static let dtButtonBorderRadiusExtraLarge = CGFloat(10.00)
    public static let dtButtonBorderRadiusExtraSmall = CGFloat(7.00)
    public static let dtButtonBorderRadiusLarge = CGFloat(9.00)
    public static let dtButtonBorderRadiusMedium = CGFloat(8.00)
    public static let dtButtonBorderRadiusSmall = CGFloat(7.50)
    public static let dtButtonColorBackgroundDanger = UIColor(red: 1.000, green: 0.180, blue: 0.180, alpha: 1)
    public static let dtButtonColorBackgroundDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtButtonColorBackgroundPrimary = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtButtonColorTextDanger = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtButtonColorTextDefault = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtButtonColorTextPrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtButtonFontSizeExtraLarge = CGFloat(27.00)
    public static let dtButtonFontSizeExtraSmall = CGFloat(12.00)
    public static let dtButtonFontSizeLarge = CGFloat(19.00)
    public static let dtButtonFontSizeMedium = CGFloat(15.00)
    public static let dtButtonFontSizeSmall = CGFloat(12.00)
    public static let dtButtonLineHeightSizeExtraLarge = CGFloat(160.00)
    public static let dtButtonLineHeightSizeExtraSmall = CGFloat(120.00)
    public static let dtButtonLineHeightSizeLarge = CGFloat(160.00)
    public static let dtButtonLineHeightSizeMedium = CGFloat(140.00)
    public static let dtButtonLineHeightSizeSmall = CGFloat(140.00)
    public static let dtButtonPaddingHorizontalExtraLarge = CGFloat(15.00)
    public static let dtButtonPaddingHorizontalExtraSmall = CGFloat(15.00)
    public static let dtButtonPaddingHorizontalLarge = CGFloat(63.00)
    public static let dtButtonPaddingHorizontalMedium = CGFloat(15.00)
    public static let dtButtonPaddingHorizontalSmall = CGFloat(15.00)
    public static let dtButtonPaddingVerticalExtraLarge = CGFloat(31.00)
    public static let dtButtonPaddingVerticalExtraSmall = CGFloat(13.00)
    public static let dtButtonPaddingVerticalLarge = CGFloat(31.00)
    public static let dtButtonPaddingVerticalMedium = CGFloat(15.00)
    public static let dtButtonPaddingVerticalSmall = CGFloat(13.00)
    public static let dtButtonSpaceGap = CGFloat(16.00)
    public static let dtColorBlack100 = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let dtColorBlack200 = UIColor(red: 0.914, green: 0.914, blue: 0.914, alpha: 1)
    public static let dtColorBlack300 = UIColor(red: 0.824, green: 0.824, blue: 0.824, alpha: 1)
    public static let dtColorBlack400 = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtColorBlack500 = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtColorBlack600 = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorBlack700 = UIColor(red: 0.227, green: 0.227, blue: 0.227, alpha: 1)
    public static let dtColorBlack800 = UIColor(red: 0.133, green: 0.133, blue: 0.133, alpha: 1)
    public static let dtColorBlack900 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorBlue100 = UIColor(red: 0.890, green: 0.929, blue: 0.976, alpha: 1)
    public static let dtColorBlue200 = UIColor(red: 0.518, green: 0.741, blue: 1.000, alpha: 1)
    public static let dtColorBlue300 = UIColor(red: 0.318, green: 0.627, blue: 0.996, alpha: 1)
    public static let dtColorBlue400 = UIColor(red: 0.090, green: 0.408, blue: 0.776, alpha: 1)
    public static let dtColorBlue500 = UIColor(red: 0.004, green: 0.196, blue: 0.427, alpha: 1)
    public static let dtColorGold100 = UIColor(red: 1.000, green: 0.906, blue: 0.576, alpha: 1)
    public static let dtColorGold200 = UIColor(red: 1.000, green: 0.827, blue: 0.384, alpha: 1)
    public static let dtColorGold300 = UIColor(red: 0.965, green: 0.671, blue: 0.235, alpha: 1)
    public static let dtColorGold400 = UIColor(red: 0.824, green: 0.561, blue: 0.169, alpha: 1)
    public static let dtColorGold500 = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtColorGradientMagentaPurple = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorGreen100 = UIColor(red: 0.867, green: 0.957, blue: 0.851, alpha: 1)
    public static let dtColorGreen200 = UIColor(red: 0.624, green: 1.000, blue: 0.565, alpha: 1)
    public static let dtColorGreen300 = UIColor(red: 0.271, green: 0.969, blue: 0.467, alpha: 1)
    public static let dtColorGreen400 = UIColor(red: 0.102, green: 0.639, blue: 0.251, alpha: 1)
    public static let dtColorGreen500 = UIColor(red: 0.071, green: 0.275, blue: 0.125, alpha: 1)
    public static let dtColorMagenta100 = UIColor(red: 1.000, green: 0.592, blue: 0.824, alpha: 1)
    public static let dtColorMagenta200 = UIColor(red: 0.969, green: 0.337, blue: 0.694, alpha: 1)
    public static let dtColorMagenta300 = UIColor(red: 0.976, green: 0.000, blue: 0.557, alpha: 1)
    public static let dtColorMagenta400 = UIColor(red: 0.549, green: 0.055, blue: 0.337, alpha: 1)
    public static let dtColorMagenta500 = UIColor(red: 0.329, green: 0.102, blue: 0.231, alpha: 1)
    public static let dtColorNeutralBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorNeutralWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtColorPurple100 = UIColor(red: 0.933, green: 0.898, blue: 1.000, alpha: 1)
    public static let dtColorPurple200 = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtColorPurple300 = UIColor(red: 0.671, green: 0.494, blue: 1.000, alpha: 1)
    public static let dtColorPurple400 = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorPurple500 = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtColorPurple600 = UIColor(red: 0.063, green: 0.008, blue: 0.173, alpha: 1)
    public static let dtColorRed100 = UIColor(red: 1.000, green: 0.863, blue: 0.863, alpha: 1)
    public static let dtColorRed200 = UIColor(red: 1.000, green: 0.455, blue: 0.455, alpha: 1)
    public static let dtColorRed300 = UIColor(red: 1.000, green: 0.180, blue: 0.180, alpha: 1)
    public static let dtColorRed400 = UIColor(red: 0.643, green: 0.067, blue: 0.067, alpha: 1)
    public static let dtColorRed500 = UIColor(red: 0.329, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorSurfaceBold = UIColor(red: 0.824, green: 0.824, blue: 0.824, alpha: 1)
    public static let dtColorSurfaceContrast = UIColor(red: 0.133, green: 0.133, blue: 0.133, alpha: 1)
    public static let dtColorSurfaceError = UIColor(red: 1.000, green: 0.863, blue: 0.863, alpha: 1)
    public static let dtColorSurfaceModerate = UIColor(red: 0.914, green: 0.914, blue: 0.914, alpha: 1)
    public static let dtColorSurfacePrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtColorSurfaceSecondary = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let dtColorSurfaceStrong = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorSurfaceSuccess = UIColor(red: 0.867, green: 0.957, blue: 0.851, alpha: 1)
    public static let dtColorSurfaceWarning = UIColor(red: 1.000, green: 0.906, blue: 0.576, alpha: 1)
    public static let dtColorTan100 = UIColor(red: 0.949, green: 0.941, blue: 0.933, alpha: 1)
    public static let dtColorTan200 = UIColor(red: 0.808, green: 0.784, blue: 0.769, alpha: 1)
    public static let dtColorTan300 = UIColor(red: 0.529, green: 0.502, blue: 0.482, alpha: 1)
    public static let dtColorTan400 = UIColor(red: 0.247, green: 0.239, blue: 0.235, alpha: 1)
    public static let dtColorTan500 = UIColor(red: 0.071, green: 0.071, blue: 0.071, alpha: 1)
    public static let dtColorTextDisabled = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtColorTextError = UIColor(red: 0.643, green: 0.067, blue: 0.067, alpha: 1)
    public static let dtColorTextLinkPrimary = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorTextMuted = UIColor(red: 0.133, green: 0.133, blue: 0.133, alpha: 0.5019607843137255)
    public static let dtColorTextOnDarkPrimary = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let dtColorTextOnDarkSecondary = UIColor(red: 0.824, green: 0.824, blue: 0.824, alpha: 1)
    public static let dtColorTextPlaceholder = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtColorTextPrimary = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorTextSecondary = UIColor(red: 0.227, green: 0.227, blue: 0.227, alpha: 1)
    public static let dtColorTextSuccess = UIColor(red: 0.000, green: 0.404, blue: 0.114, alpha: 1)
    public static let dtColorTextTertiary = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorTextWarning = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtFontFamilyBody = "-apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji", -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol"
    public static let dtFontFamilyExpressive = "Archivo,-apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji", -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol"
    public static let dtFontFamilyMono = "SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, Courier, monospace, SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier, monospace"
    public static let dtFontLineHeight100 = CGFloat(100.00)
    public static let dtFontLineHeight200 = CGFloat(120.00)
    public static let dtFontLineHeight300 = CGFloat(140.00)
    public static let dtFontLineHeight400 = CGFloat(160.00)
    public static let dtFontLineHeight500 = CGFloat(180.00)
    public static let dtFontLineHeight600 = CGFloat(200.00)
    public static let dtFontSize100 = CGFloat(12.00)
    public static let dtFontSize200 = CGFloat(15.00)
    public static let dtFontSize300 = CGFloat(19.00)
    public static let dtFontSize400 = CGFloat(27.00)
    public static let dtFontSize500 = CGFloat(38.00)
    public static let dtFontSizeRoot = CGFloat(10.00)
    public static let dtFontTextCaseCapitalize = "capitalize"
    public static let dtFontTextCaseLowercase = "lowercase"
    public static let dtFontTextCaseNone = "none"
    public static let dtFontTextCaseUppercase = "uppercase"
    public static let dtFontWeightBold = "700"
    public static let dtFontWeightMedium = "500"
    public static let dtFontWeightNormal = "400"
    public static let dtFontWeightSemiBold = "600"
    public static let dtOpacity0 = CGFloat(0.00)
    public static let dtOpacity100 = CGFloat(0.05)
    public static let dtOpacity1000 = CGFloat(0.75)
    public static let dtOpacity1100 = CGFloat(0.80)
    public static let dtOpacity1200 = CGFloat(0.90)
    public static let dtOpacity1300 = CGFloat(1.00)
    public static let dtOpacity200 = CGFloat(0.10)
    public static let dtOpacity300 = CGFloat(0.20)
    public static let dtOpacity400 = CGFloat(0.25)
    public static let dtOpacity500 = CGFloat(0.30)
    public static let dtOpacity600 = CGFloat(0.40)
    public static let dtOpacity700 = CGFloat(0.50)
    public static let dtOpacity800 = CGFloat(0.60)
    public static let dtOpacity900 = CGFloat(0.70)
    public static let dtShadowCard0Blur = CGFloat(2.00)
    public static let dtShadowCard0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.03137254901960784)
    public static let dtShadowCard0Spread = CGFloat(0.00)
    public static let dtShadowCard0Type = "dropShadow"
    public static let dtShadowCard0X = CGFloat(0.00)
    public static let dtShadowCard0Y = CGFloat(1.00)
    public static let dtShadowCard1Blur = CGFloat(4.00)
    public static let dtShadowCard1Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.0392156862745098)
    public static let dtShadowCard1Spread = CGFloat(0.00)
    public static let dtShadowCard1Type = "dropShadow"
    public static let dtShadowCard1X = CGFloat(0.00)
    public static let dtShadowCard1Y = CGFloat(2.00)
    public static let dtShadowCard2Blur = CGFloat(16.00)
    public static let dtShadowCard2Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.0784313725490196)
    public static let dtShadowCard2Spread = CGFloat(0.00)
    public static let dtShadowCard2Type = "dropShadow"
    public static let dtShadowCard2X = CGFloat(0.00)
    public static let dtShadowCard2Y = CGFloat(2.00)
    public static let dtShadowExtraLarge0Blur = CGFloat(32.00)
    public static let dtShadowExtraLarge0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.30196078431372547)
    public static let dtShadowExtraLarge0Spread = CGFloat(0.00)
    public static let dtShadowExtraLarge0Type = "dropShadow"
    public static let dtShadowExtraLarge0X = CGFloat(0.00)
    public static let dtShadowExtraLarge0Y = CGFloat(2.00)
    public static let dtShadowLarge0Blur = CGFloat(16.00)
    public static let dtShadowLarge0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.30196078431372547)
    public static let dtShadowLarge0Spread = CGFloat(0.00)
    public static let dtShadowLarge0Type = "dropShadow"
    public static let dtShadowLarge0X = CGFloat(0.00)
    public static let dtShadowLarge0Y = CGFloat(2.00)
    public static let dtShadowMedium0Blur = CGFloat(8.00)
    public static let dtShadowMedium0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.25098039215686274)
    public static let dtShadowMedium0Spread = CGFloat(0.00)
    public static let dtShadowMedium0Type = "dropShadow"
    public static let dtShadowMedium0X = CGFloat(0.00)
    public static let dtShadowMedium0Y = CGFloat(2.00)
    public static let dtShadowSmall0Blur = CGFloat(4.00)
    public static let dtShadowSmall0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.14901960784313725)
    public static let dtShadowSmall0Spread = CGFloat(0.00)
    public static let dtShadowSmall0Type = "dropShadow"
    public static let dtShadowSmall0X = CGFloat(0.00)
    public static let dtShadowSmall0Y = CGFloat(2.00)
    public static let dtSize0 = CGFloat(0.00)
    public static let dtSize100 = CGFloat(1.00)
    public static let dtSize200 = CGFloat(2.00)
    public static let dtSize300 = CGFloat(4.00)
    public static let dtSize400 = CGFloat(8.00)
    public static let dtSize500 = CGFloat(16.00)
    public static let dtSize600 = CGFloat(32.00)
    public static let dtSize700 = CGFloat(64.00)
    public static let dtSize800 = CGFloat(128.00)
    public static let dtSizeBase = CGFloat(8.00)
    public static let dtSizeBorder0 = CGFloat(0.00)
    public static let dtSizeBorder100 = CGFloat(1.00)
    public static let dtSizeBorder200 = CGFloat(2.00)
    public static let dtSizeBorder300 = CGFloat(4.00)
    public static let dtSizeBorderIcon100 = CGFloat(1.00)
    public static let dtSizeBorderIcon200 = CGFloat(1.25)
    public static let dtSizeBorderIcon300 = CGFloat(1.50)
    public static let dtSizeBorderIcon400 = CGFloat(1.75)
    public static let dtSizeBorderIcon500 = CGFloat(1.75)
    public static let dtSizeBorderIcon600 = CGFloat(2.50)
    public static let dtSizeBorderIcon700 = CGFloat(2.75)
    public static let dtSizeBorderIcon800 = CGFloat(3.50)
    public static let dtSizeIcon100 = CGFloat(12.00)
    public static let dtSizeIcon200 = CGFloat(14.00)
    public static let dtSizeIcon300 = CGFloat(18.00)
    public static let dtSizeIcon400 = CGFloat(20.00)
    public static let dtSizeIcon500 = CGFloat(24.00)
    public static let dtSizeIcon600 = CGFloat(32.00)
    public static let dtSizeIcon700 = CGFloat(38.00)
    public static let dtSizeIcon800 = CGFloat(48.00)
    public static let dtSizeRadius0 = CGFloat(0.00)
    public static let dtSizeRadius100 = CGFloat(1.00)
    public static let dtSizeRadius200 = CGFloat(2.00)
    public static let dtSizeRadius300 = CGFloat(4.00)
    public static let dtSizeRadius400 = CGFloat(8.00)
    public static let dtSizeRadius500 = CGFloat(32.00)
    public static let dtSpace0 = CGFloat(0.00)
    public static let dtSpace100 = CGFloat(1.00)
    public static let dtSpace200 = CGFloat(2.00)
    public static let dtSpace300 = CGFloat(4.00)
    public static let dtSpace400 = CGFloat(8.00)
    public static let dtSpace500 = CGFloat(16.00)
    public static let dtSpace600 = CGFloat(32.00)
    public static let dtSpace700 = CGFloat(64.00)
    public static let dtSpace800 = CGFloat(128.00)
    public static let dtSpaceBase = CGFloat(8.00)
    public static let dtTypographyBodyBaseFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyBodyBaseFontSize = CGFloat(15.00)
    public static let dtTypographyBodyBaseFontWeight = "400"
    public static let dtTypographyBodyBaseLineHeight = CGFloat(160.00)
    public static let dtTypographyBodyCompactBaseFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyBodyCompactBaseFontSize = CGFloat(15.00)
    public static let dtTypographyBodyCompactBaseFontWeight = "400"
    public static let dtTypographyBodyCompactBaseLineHeight = CGFloat(140.00)
    public static let dtTypographyBodyCompactSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyBodyCompactSmallFontSize = CGFloat(12.00)
    public static let dtTypographyBodyCompactSmallFontWeight = "400"
    public static let dtTypographyBodyCompactSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyBodySmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyBodySmallFontSize = CGFloat(12.00)
    public static let dtTypographyBodySmallFontWeight = "400"
    public static let dtTypographyBodySmallLineHeight = CGFloat(140.00)
    public static let dtTypographyCodeBaseFontFamily = SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, Courier, monospace
    public static let dtTypographyCodeBaseFontSize = CGFloat(15.00)
    public static let dtTypographyCodeBaseFontWeight = "400"
    public static let dtTypographyCodeBaseLineHeight = CGFloat(120.00)
    public static let dtTypographyCodeSmallFontFamily = SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, Courier, monospace
    public static let dtTypographyCodeSmallFontSize = CGFloat(12.00)
    public static let dtTypographyCodeSmallFontWeight = "400"
    public static let dtTypographyCodeSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineCompactLargeFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineCompactLargeFontSize = CGFloat(19.00)
    public static let dtTypographyHeadlineCompactLargeFontWeight = "700"
    public static let dtTypographyHeadlineCompactLargeLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineCompactMediumFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineCompactMediumFontSize = CGFloat(15.00)
    public static let dtTypographyHeadlineCompactMediumFontWeight = "700"
    public static let dtTypographyHeadlineCompactMediumLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineCompactSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineCompactSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineCompactSmallFontWeight = "700"
    public static let dtTypographyHeadlineCompactSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineCompactSoftSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineCompactSoftSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineCompactSoftSmallFontWeight = "500"
    public static let dtTypographyHeadlineCompactSoftSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineExtraExtraLargeFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineExtraExtraLargeFontSize = CGFloat(38.00)
    public static let dtTypographyHeadlineExtraExtraLargeFontWeight = "500"
    public static let dtTypographyHeadlineExtraExtraLargeLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineExtraLargeFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineExtraLargeFontSize = CGFloat(27.00)
    public static let dtTypographyHeadlineExtraLargeFontWeight = "500"
    public static let dtTypographyHeadlineExtraLargeLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineEyebrowFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineEyebrowFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineEyebrowFontWeight = "400"
    public static let dtTypographyHeadlineEyebrowLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineEyebrowTextCase = "uppercase"
    public static let dtTypographyHeadlineLargeFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineLargeFontSize = CGFloat(19.00)
    public static let dtTypographyHeadlineLargeFontWeight = "700"
    public static let dtTypographyHeadlineLargeLineHeight = CGFloat(160.00)
    public static let dtTypographyHeadlineMediumFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineMediumFontSize = CGFloat(15.00)
    public static let dtTypographyHeadlineMediumFontWeight = "700"
    public static let dtTypographyHeadlineMediumLineHeight = CGFloat(160.00)
    public static let dtTypographyHeadlineSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineSmallFontWeight = "700"
    public static let dtTypographyHeadlineSmallLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineSoftSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHeadlineSoftSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineSoftSmallFontWeight = "500"
    public static let dtTypographyHeadlineSoftSmallLineHeight = CGFloat(140.00)
    public static let dtTypographyHelperBaseFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHelperBaseFontSize = CGFloat(15.00)
    public static let dtTypographyHelperBaseFontWeight = "400"
    public static let dtTypographyHelperBaseLineHeight = CGFloat(140.00)
    public static let dtTypographyHelperSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyHelperSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHelperSmallFontWeight = "400"
    public static let dtTypographyHelperSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyLabelBaseFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyLabelBaseFontSize = CGFloat(15.00)
    public static let dtTypographyLabelBaseFontWeight = "600"
    public static let dtTypographyLabelBaseLineHeight = CGFloat(160.00)
    public static let dtTypographyLabelCompactBaseFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyLabelCompactBaseFontSize = CGFloat(15.00)
    public static let dtTypographyLabelCompactBaseFontWeight = "600"
    public static let dtTypographyLabelCompactBaseLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelCompactPlainBaseFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyLabelCompactPlainBaseFontSize = CGFloat(15.00)
    public static let dtTypographyLabelCompactPlainBaseFontWeight = "400"
    public static let dtTypographyLabelCompactPlainBaseLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelCompactPlainSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyLabelCompactPlainSmallFontSize = CGFloat(12.00)
    public static let dtTypographyLabelCompactPlainSmallFontWeight = "400"
    public static let dtTypographyLabelCompactPlainSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyLabelCompactSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyLabelCompactSmallFontSize = CGFloat(12.00)
    public static let dtTypographyLabelCompactSmallFontWeight = "600"
    public static let dtTypographyLabelCompactSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyLabelPlainBaseFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyLabelPlainBaseFontSize = CGFloat(15.00)
    public static let dtTypographyLabelPlainBaseFontWeight = "400"
    public static let dtTypographyLabelPlainBaseLineHeight = CGFloat(160.00)
    public static let dtTypographyLabelPlainSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyLabelPlainSmallFontSize = CGFloat(12.00)
    public static let dtTypographyLabelPlainSmallFontWeight = "400"
    public static let dtTypographyLabelPlainSmallLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelSmallFontFamily = -apple-system,BlinkMacSystemFont,"SF Pro","Segoe UI Adjusted","Segoe UI",SFMono,"Helvetica Neue",Cantarell,Ubuntu,Roboto,Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"
    public static let dtTypographyLabelSmallFontSize = CGFloat(12.00)
    public static let dtTypographyLabelSmallFontWeight = "600"
    public static let dtTypographyLabelSmallLineHeight = CGFloat(140.00)
}
