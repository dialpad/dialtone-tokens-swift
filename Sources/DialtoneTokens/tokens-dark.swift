
//
// tokens-dark.swift
//

// Do not edit directly
// Generated on Thu, 07 Mar 2024 00:34:31 GMT


import UIKit

public enum DialtoneTokensDark {
    public static let dtActionColorBackgroundBaseActive = UIColor(red: 0.671, green: 0.494, blue: 1.000, alpha: 0.2)
    public static let dtActionColorBackgroundBaseDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundBaseHover = UIColor(red: 0.671, green: 0.494, blue: 1.000, alpha: 0.10196078431372549)
    public static let dtActionColorBackgroundBasePrimaryActive = UIColor(red: 0.412, green: 0.216, blue: 1.000, alpha: 1)
    public static let dtActionColorBackgroundBasePrimaryDefault = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtActionColorBackgroundBasePrimaryHover = UIColor(red: 0.451, green: 0.267, blue: 1.000, alpha: 1)
    public static let dtActionColorBackgroundCriticalActive = UIColor(red: 0.925, green: 0.055, blue: 0.055, alpha: 0.30196078431372547)
    public static let dtActionColorBackgroundCriticalDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundCriticalHover = UIColor(red: 0.925, green: 0.055, blue: 0.055, alpha: 0.2)
    public static let dtActionColorBackgroundCriticalPrimaryActive = UIColor(red: 0.816, green: 0.047, blue: 0.047, alpha: 1)
    public static let dtActionColorBackgroundCriticalPrimaryDefault = UIColor(red: 0.925, green: 0.055, blue: 0.055, alpha: 1)
    public static let dtActionColorBackgroundCriticalPrimaryHover = UIColor(red: 0.851, green: 0.051, blue: 0.051, alpha: 1)
    public static let dtActionColorBackgroundDisabledDefault = UIColor(red: 0.227, green: 0.227, blue: 0.227, alpha: 1)
    public static let dtActionColorBackgroundInvertedActive = UIColor(red: 0.122, green: 0.122, blue: 0.122, alpha: 0.30196078431372547)
    public static let dtActionColorBackgroundInvertedDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundInvertedHover = UIColor(red: 0.122, green: 0.122, blue: 0.122, alpha: 0.14901960784313725)
    public static let dtActionColorBackgroundInvertedPrimaryActive = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtActionColorBackgroundInvertedPrimaryDefault = UIColor(red: 0.122, green: 0.122, blue: 0.122, alpha: 1)
    public static let dtActionColorBackgroundInvertedPrimaryHover = UIColor(red: 0.063, green: 0.008, blue: 0.173, alpha: 1)
    public static let dtActionColorBackgroundMutedActive = UIColor(red: 0.831, green: 0.831, blue: 0.831, alpha: 0.1607843137254902)
    public static let dtActionColorBackgroundMutedDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundMutedHover = UIColor(red: 0.831, green: 0.831, blue: 0.831, alpha: 0.10196078431372549)
    public static let dtActionColorBackgroundPositiveActive = UIColor(red: 0.686, green: 1.000, blue: 0.639, alpha: 0.0784313725490196)
    public static let dtActionColorBackgroundPositiveDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundPositiveHover = UIColor(red: 0.475, green: 0.863, blue: 0.576, alpha: 1)
    public static let dtActionColorBackgroundPositivePrimaryActive = UIColor(red: 0.459, green: 1.000, blue: 0.376, alpha: 1)
    public static let dtActionColorBackgroundPositivePrimaryDefault = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtActionColorBackgroundPositivePrimaryHover = UIColor(red: 0.545, green: 1.000, blue: 0.475, alpha: 1)
    public static let dtActionColorBorderBaseOutlinedDefault = UIColor(red: 0.671, green: 0.494, blue: 1.000, alpha: 1)
    public static let dtActionColorBorderCriticalOutlinedDefault = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtActionColorBorderInvertedOutlinedDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorBorderMutedOutlinedDefault = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtActionColorForegroundBaseActive = UIColor(red: 0.745, green: 0.592, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundBaseDefault = UIColor(red: 0.671, green: 0.494, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundBaseHover = UIColor(red: 0.745, green: 0.592, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundBasePrimaryDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundCriticalActive = UIColor(red: 1.000, green: 0.647, blue: 0.635, alpha: 1)
    public static let dtActionColorForegroundCriticalDefault = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtActionColorForegroundCriticalHover = UIColor(red: 1.000, green: 0.647, blue: 0.635, alpha: 1)
    public static let dtActionColorForegroundCriticalPrimaryDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundDisabledDefault = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtActionColorForegroundInvertedActive = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorForegroundInvertedDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorForegroundInvertedHover = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorForegroundInvertedPrimaryActive = UIColor(red: 0.855, green: 0.780, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundInvertedPrimaryDefault = UIColor(red: 0.671, green: 0.494, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundInvertedPrimaryHover = UIColor(red: 0.855, green: 0.780, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundMutedActive = UIColor(red: 0.761, green: 0.761, blue: 0.761, alpha: 1)
    public static let dtActionColorForegroundMutedDefault = UIColor(red: 0.761, green: 0.761, blue: 0.761, alpha: 1)
    public static let dtActionColorForegroundMutedHover = UIColor(red: 0.761, green: 0.761, blue: 0.761, alpha: 1)
    public static let dtActionColorForegroundPositiveActive = UIColor(red: 0.431, green: 1.000, blue: 0.345, alpha: 1)
    public static let dtActionColorForegroundPositiveDefault = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtActionColorForegroundPositiveHover = UIColor(red: 0.431, green: 1.000, blue: 0.345, alpha: 1)
    public static let dtActionColorForegroundPositivePrimaryDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtAvatarColorBackground000 = UIColor(red: 0.878, green: 0.878, blue: 0.878, alpha: 1)
    public static let dtAvatarColorBackground100 = UIColor(red: 0.102, green: 0.639, blue: 0.251, alpha: 1)
    public static let dtAvatarColorBackground1000 = UIColor(red: 0.714, green: 0.812, blue: 1.000, alpha: 1)
    public static let dtAvatarColorBackground1100 = UIColor(red: 0.945, green: 0.718, blue: 0.910, alpha: 1)
    public static let dtAvatarColorBackground1200 = UIColor(red: 0.925, green: 0.467, blue: 0.741, alpha: 1)
    public static let dtAvatarColorBackground1300 = UIColor(red: 1.000, green: 0.404, blue: 0.745, alpha: 1)
    public static let dtAvatarColorBackground1400 = UIColor(red: 0.973, green: 0.494, blue: 0.494, alpha: 1)
    public static let dtAvatarColorBackground1500 = UIColor(red: 0.925, green: 0.659, blue: 0.467, alpha: 1)
    public static let dtAvatarColorBackground1600 = UIColor(red: 1.000, green: 0.745, blue: 0.255, alpha: 1)
    public static let dtAvatarColorBackground1700 = UIColor(red: 1.000, green: 0.839, blue: 0.275, alpha: 1)
    public static let dtAvatarColorBackground1800 = UIColor(red: 0.945, green: 0.855, blue: 0.718, alpha: 1)
    public static let dtAvatarColorBackground200 = UIColor(red: 0.667, green: 1.000, blue: 0.514, alpha: 1)
    public static let dtAvatarColorBackground300 = UIColor(red: 0.678, green: 0.918, blue: 0.533, alpha: 1)
    public static let dtAvatarColorBackground400 = UIColor(red: 0.467, green: 0.925, blue: 0.651, alpha: 1)
    public static let dtAvatarColorBackground500 = UIColor(red: 0.478, green: 0.929, blue: 0.741, alpha: 1)
    public static let dtAvatarColorBackground600 = UIColor(red: 0.467, green: 0.871, blue: 0.925, alpha: 1)
    public static let dtAvatarColorBackground700 = UIColor(red: 0.369, green: 0.847, blue: 1.000, alpha: 1)
    public static let dtAvatarColorBackground800 = UIColor(red: 0.600, green: 0.906, blue: 1.000, alpha: 1)
    public static let dtAvatarColorBackground900 = UIColor(red: 0.318, green: 0.627, blue: 0.996, alpha: 1)
    public static let dtAvatarColorForeground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtBadgeColorBackgroundAi = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtBadgeColorBackgroundBulletin = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtBadgeColorBackgroundCritical = UIColor(red: 0.357, green: 0.020, blue: 0.020, alpha: 1)
    public static let dtBadgeColorBackgroundDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.14901960784313725)
    public static let dtBadgeColorBackgroundInfo = UIColor(red: 0.004, green: 0.196, blue: 0.427, alpha: 1)
    public static let dtBadgeColorBackgroundSuccess = UIColor(red: 0.071, green: 0.275, blue: 0.125, alpha: 1)
    public static let dtBadgeColorBackgroundWarning = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtBadgeColorForegroundBulletin = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtBadgeColorForegroundDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtCheckboxColorBackgroundChecked = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtCheckboxColorBorderChecked = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtCheckboxColorBorderUnchecked = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtCheckboxSizeHeight = CGFloat(16.00)
    public static let dtCheckboxSizeRadius = CGFloat(4.00)
    public static let dtCheckboxSizeWidth = CGFloat(16.00)
    public static let dtColorBlack100 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorBlack200 = UIColor(red: 0.149, green: 0.149, blue: 0.149, alpha: 1)
    public static let dtColorBlack300 = UIColor(red: 0.227, green: 0.227, blue: 0.227, alpha: 1)
    public static let dtColorBlack400 = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorBlack500 = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtColorBlack600 = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtColorBlack700 = UIColor(red: 0.761, green: 0.761, blue: 0.761, alpha: 1)
    public static let dtColorBlack800 = UIColor(red: 0.831, green: 0.831, blue: 0.831, alpha: 1)
    public static let dtColorBlack900 = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtColorBlue100 = UIColor(red: 0.004, green: 0.196, blue: 0.427, alpha: 1)
    public static let dtColorBlue200 = UIColor(red: 0.090, green: 0.408, blue: 0.776, alpha: 1)
    public static let dtColorBlue300 = UIColor(red: 0.318, green: 0.627, blue: 0.996, alpha: 1)
    public static let dtColorBlue400 = UIColor(red: 0.600, green: 0.784, blue: 1.000, alpha: 1)
    public static let dtColorBlue500 = UIColor(red: 0.918, green: 0.949, blue: 0.980, alpha: 1)
    public static let dtColorBorderAccent = UIColor(red: 0.976, green: 0.000, blue: 0.557, alpha: 1)
    public static let dtColorBorderAi = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorBorderBold = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.5019607843137255)
    public static let dtColorBorderBoldInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5019607843137255)
    public static let dtColorBorderBrand = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorBorderBrandInverted = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorBorderBrandStrong = UIColor(red: 0.855, green: 0.780, blue: 1.000, alpha: 1)
    public static let dtColorBorderBrandStrongInverted = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtColorBorderBrandSubtle = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtColorBorderBrandSubtleInverted = UIColor(red: 0.855, green: 0.780, blue: 1.000, alpha: 1)
    public static let dtColorBorderCritical = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtColorBorderCriticalInverted = UIColor(red: 0.925, green: 0.055, blue: 0.055, alpha: 1)
    public static let dtColorBorderCriticalStrong = UIColor(red: 1.000, green: 0.898, blue: 0.902, alpha: 1)
    public static let dtColorBorderCriticalStrongInverted = UIColor(red: 0.718, green: 0.043, blue: 0.043, alpha: 1)
    public static let dtColorBorderCriticalSubtle = UIColor(red: 0.718, green: 0.043, blue: 0.043, alpha: 1)
    public static let dtColorBorderCriticalSubtleInverted = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtColorBorderDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.2196078431372549)
    public static let dtColorBorderDefaultInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1803921568627451)
    public static let dtColorBorderFocus = UIColor(red: 0.318, green: 0.627, blue: 0.996, alpha: 1)
    public static let dtColorBorderModerate = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.3607843137254902)
    public static let dtColorBorderModerateInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.3411764705882353)
    public static let dtColorBorderSubtle = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.1411764705882353)
    public static let dtColorBorderSubtleInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.10196078431372549)
    public static let dtColorBorderSuccess = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtColorBorderSuccessInverted = UIColor(red: 0.102, green: 0.639, blue: 0.251, alpha: 1)
    public static let dtColorBorderSuccessStrong = UIColor(red: 0.929, green: 0.976, blue: 0.922, alpha: 1)
    public static let dtColorBorderSuccessStrongInverted = UIColor(red: 0.071, green: 0.275, blue: 0.125, alpha: 1)
    public static let dtColorBorderSuccessSubtle = UIColor(red: 0.102, green: 0.639, blue: 0.251, alpha: 1)
    public static let dtColorBorderSuccessSubtleInverted = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtColorBorderWarning = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtColorBorderWarningInverted = UIColor(red: 0.824, green: 0.561, blue: 0.169, alpha: 1)
    public static let dtColorBorderWarningStrong = UIColor(red: 1.000, green: 0.957, blue: 0.800, alpha: 1)
    public static let dtColorBorderWarningStrongInverted = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtColorBorderWarningSubtle = UIColor(red: 0.824, green: 0.561, blue: 0.169, alpha: 1)
    public static let dtColorBorderWarningSubtleInverted = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtColorBrandMagenta = UIColor(red: 0.976, green: 0.000, blue: 0.557, alpha: 1)
    public static let dtColorBrandPurple = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorForegroundCritical = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtColorForegroundCriticalInverted = UIColor(red: 0.925, green: 0.055, blue: 0.055, alpha: 1)
    public static let dtColorForegroundCriticalStrong = UIColor(red: 1.000, green: 0.643, blue: 0.643, alpha: 1)
    public static let dtColorForegroundCriticalStrongInverted = UIColor(red: 0.718, green: 0.043, blue: 0.043, alpha: 1)
    public static let dtColorForegroundDisabled = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtColorForegroundDisabledInverted = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtColorForegroundMuted = UIColor(red: 0.831, green: 0.831, blue: 0.831, alpha: 0.6)
    public static let dtColorForegroundMutedInverted = UIColor(red: 0.149, green: 0.149, blue: 0.149, alpha: 0.6)
    public static let dtColorForegroundPlaceholder = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtColorForegroundPlaceholderInverted = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtColorForegroundPrimary = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtColorForegroundPrimaryInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorForegroundSecondary = UIColor(red: 0.761, green: 0.761, blue: 0.761, alpha: 1)
    public static let dtColorForegroundSecondaryInverted = UIColor(red: 0.227, green: 0.227, blue: 0.227, alpha: 1)
    public static let dtColorForegroundSuccess = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtColorForegroundSuccessInverted = UIColor(red: 0.102, green: 0.639, blue: 0.251, alpha: 1)
    public static let dtColorForegroundSuccessStrong = UIColor(red: 0.796, green: 1.000, blue: 0.765, alpha: 1)
    public static let dtColorForegroundSuccessStrongInverted = UIColor(red: 0.071, green: 0.275, blue: 0.125, alpha: 1)
    public static let dtColorForegroundTertiary = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtColorForegroundTertiaryInverted = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorForegroundWarning = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtColorForegroundWarningInverted = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtColorGold100 = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtColorGold200 = UIColor(red: 0.824, green: 0.561, blue: 0.169, alpha: 1)
    public static let dtColorGold300 = UIColor(red: 0.965, green: 0.671, blue: 0.235, alpha: 1)
    public static let dtColorGold400 = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtColorGold500 = UIColor(red: 1.000, green: 0.957, blue: 0.800, alpha: 1)
    public static let dtColorGradientMagentaPurple = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorGreen100 = UIColor(red: 0.071, green: 0.275, blue: 0.125, alpha: 1)
    public static let dtColorGreen200 = UIColor(red: 0.102, green: 0.639, blue: 0.251, alpha: 1)
    public static let dtColorGreen300 = UIColor(red: 0.271, green: 0.969, blue: 0.467, alpha: 1)
    public static let dtColorGreen400 = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtColorGreen500 = UIColor(red: 0.929, green: 0.976, blue: 0.922, alpha: 1)
    public static let dtColorLinkCritical = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtColorLinkCriticalHover = UIColor(red: 1.000, green: 0.898, blue: 0.902, alpha: 1)
    public static let dtColorLinkCriticalInverted = UIColor(red: 0.925, green: 0.055, blue: 0.055, alpha: 1)
    public static let dtColorLinkCriticalInvertedHover = UIColor(red: 0.718, green: 0.043, blue: 0.043, alpha: 1)
    public static let dtColorLinkDisabled = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtColorLinkDisabledHover = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtColorLinkDisabledInverted = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtColorLinkDisabledInvertedHover = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtColorLinkMuted = UIColor(red: 0.761, green: 0.761, blue: 0.761, alpha: 1)
    public static let dtColorLinkMutedHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtColorLinkMutedInverted = UIColor(red: 0.227, green: 0.227, blue: 0.227, alpha: 1)
    public static let dtColorLinkMutedInvertedHover = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorLinkPrimary = UIColor(red: 0.718, green: 0.565, blue: 1.000, alpha: 1)
    public static let dtColorLinkPrimaryHover = UIColor(red: 0.855, green: 0.780, blue: 1.000, alpha: 1)
    public static let dtColorLinkPrimaryInverted = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorLinkPrimaryInvertedHover = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtColorLinkSuccess = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtColorLinkSuccessHover = UIColor(red: 0.929, green: 0.976, blue: 0.922, alpha: 1)
    public static let dtColorLinkSuccessInverted = UIColor(red: 0.102, green: 0.639, blue: 0.251, alpha: 1)
    public static let dtColorLinkSuccessInvertedHover = UIColor(red: 0.071, green: 0.275, blue: 0.125, alpha: 1)
    public static let dtColorLinkWarning = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtColorLinkWarningHover = UIColor(red: 1.000, green: 0.957, blue: 0.800, alpha: 1)
    public static let dtColorLinkWarningInverted = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtColorLinkWarningInvertedHover = UIColor(red: 0.149, green: 0.149, blue: 0.149, alpha: 1)
    public static let dtColorMagenta100 = UIColor(red: 0.329, green: 0.102, blue: 0.231, alpha: 1)
    public static let dtColorMagenta200 = UIColor(red: 0.549, green: 0.055, blue: 0.337, alpha: 1)
    public static let dtColorMagenta300 = UIColor(red: 0.976, green: 0.000, blue: 0.557, alpha: 1)
    public static let dtColorMagenta400 = UIColor(red: 0.976, green: 0.522, blue: 0.780, alpha: 1)
    public static let dtColorMagenta500 = UIColor(red: 1.000, green: 0.878, blue: 0.949, alpha: 1)
    public static let dtColorNeutralBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorNeutralTransparent = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtColorNeutralWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtColorPurple100 = UIColor(red: 0.063, green: 0.008, blue: 0.173, alpha: 1)
    public static let dtColorPurple200 = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtColorPurple300 = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorPurple400 = UIColor(red: 0.671, green: 0.494, blue: 1.000, alpha: 1)
    public static let dtColorPurple500 = UIColor(red: 0.855, green: 0.780, blue: 1.000, alpha: 1)
    public static let dtColorPurple600 = UIColor(red: 0.961, green: 0.941, blue: 1.000, alpha: 1)
    public static let dtColorRed100 = UIColor(red: 0.357, green: 0.020, blue: 0.020, alpha: 1)
    public static let dtColorRed200 = UIColor(red: 0.718, green: 0.043, blue: 0.043, alpha: 1)
    public static let dtColorRed300 = UIColor(red: 0.925, green: 0.055, blue: 0.055, alpha: 1)
    public static let dtColorRed400 = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtColorRed500 = UIColor(red: 1.000, green: 0.898, blue: 0.902, alpha: 1)
    public static let dtColorSurfaceBackdrop = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.7019607843137254)
    public static let dtColorSurfaceBold = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorSurfaceBoldOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.27058823529411763)
    public static let dtColorSurfaceContrast = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtColorSurfaceContrastOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.9607843137254902)
    public static let dtColorSurfaceCritical = UIColor(red: 0.357, green: 0.020, blue: 0.020, alpha: 1)
    public static let dtColorSurfaceCriticalOpaque = UIColor(red: 0.718, green: 0.043, blue: 0.043, alpha: 0.3215686274509804)
    public static let dtColorSurfaceCriticalStrong = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtColorSurfaceCriticalSubtle = UIColor(red: 0.176, green: 0.008, blue: 0.008, alpha: 1)
    public static let dtColorSurfaceCriticalSubtleOpaque = UIColor(red: 0.176, green: 0.008, blue: 0.008, alpha: 0.5019607843137255)
    public static let dtColorSurfaceInfo = UIColor(red: 0.004, green: 0.196, blue: 0.427, alpha: 1)
    public static let dtColorSurfaceInfoOpaque = UIColor(red: 0.090, green: 0.412, blue: 0.776, alpha: 0.2901960784313726)
    public static let dtColorSurfaceInfoStrong = UIColor(red: 0.600, green: 0.784, blue: 1.000, alpha: 1)
    public static let dtColorSurfaceInfoSubtle = UIColor(red: 0.004, green: 0.118, blue: 0.255, alpha: 1)
    public static let dtColorSurfaceInfoSubtleOpaque = UIColor(red: 0.004, green: 0.118, blue: 0.255, alpha: 0.5019607843137255)
    public static let dtColorSurfaceModerate = UIColor(red: 0.227, green: 0.227, blue: 0.227, alpha: 1)
    public static let dtColorSurfaceModerateOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.14901960784313725)
    public static let dtColorSurfacePrimary = UIColor(red: 0.122, green: 0.122, blue: 0.122, alpha: 1)
    public static let dtColorSurfaceSecondary = UIColor(red: 0.149, green: 0.149, blue: 0.149, alpha: 1)
    public static let dtColorSurfaceSecondaryOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.058823529411764705)
    public static let dtColorSurfaceStrong = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtColorSurfaceStrongOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.6509803921568628)
    public static let dtColorSurfaceSuccess = UIColor(red: 0.071, green: 0.275, blue: 0.125, alpha: 1)
    public static let dtColorSurfaceSuccessOpaque = UIColor(red: 0.102, green: 0.639, blue: 0.255, alpha: 0.25882352941176473)
    public static let dtColorSurfaceSuccessStrong = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtColorSurfaceSuccessSubtle = UIColor(red: 0.035, green: 0.137, blue: 0.063, alpha: 1)
    public static let dtColorSurfaceSuccessSubtleOpaque = UIColor(red: 0.035, green: 0.137, blue: 0.063, alpha: 0.5019607843137255)
    public static let dtColorSurfaceWarning = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtColorSurfaceWarningOpaque = UIColor(red: 0.824, green: 0.561, blue: 0.169, alpha: 0.47843137254901963)
    public static let dtColorSurfaceWarningStrong = UIColor(red: 0.824, green: 0.561, blue: 0.169, alpha: 1)
    public static let dtColorSurfaceWarningSubtle = UIColor(red: 0.251, green: 0.157, blue: 0.016, alpha: 1)
    public static let dtColorSurfaceWarningSubtleOpaque = UIColor(red: 0.251, green: 0.157, blue: 0.016, alpha: 0.5019607843137255)
    public static let dtColorTan100 = UIColor(red: 0.071, green: 0.071, blue: 0.071, alpha: 1)
    public static let dtColorTan200 = UIColor(red: 0.247, green: 0.239, blue: 0.235, alpha: 1)
    public static let dtColorTan300 = UIColor(red: 0.529, green: 0.502, blue: 0.482, alpha: 1)
    public static let dtColorTan400 = UIColor(red: 0.808, green: 0.784, blue: 0.769, alpha: 1)
    public static let dtColorTan500 = UIColor(red: 0.949, green: 0.941, blue: 0.933, alpha: 1)
    public static let dtFontFamilyBody = UIFont.systemFont(ofSize: 15)
    public static let dtFontFamilyExpressive = UIFont.systemFont(ofSize: 15)
    public static let dtFontFamilyMono = UIFont.monospacedSystemFont(ofSize: 15, weight: .regular)
    public static let dtFontLineHeight100 = CGFloat(100.00)
    public static let dtFontLineHeight200 = CGFloat(120.00)
    public static let dtFontLineHeight300 = CGFloat(140.00)
    public static let dtFontLineHeight400 = CGFloat(160.00)
    public static let dtFontLineHeight500 = CGFloat(180.00)
    public static let dtFontLineHeight600 = CGFloat(200.00)
    public static let dtFontSize100 = CGFloat(12.00)
    public static let dtFontSize200 = CGFloat(15.00)
    public static let dtFontSize300 = CGFloat(19.00)
    public static let dtFontSize400 = CGFloat(27.00)
    public static let dtFontSize500 = CGFloat(38.00)
    public static let dtFontTextCaseCapitalize = "capitalize"
    public static let dtFontTextCaseLowercase = "lowercase"
    public static let dtFontTextCaseNone = "none"
    public static let dtFontTextCaseUppercase = "uppercase"
    public static let dtFontWeightBold = 700
    public static let dtFontWeightMedium = 500
    public static let dtFontWeightNormal = 400
    public static let dtFontWeightSemiBold = 600
    public static let dtIconSize100 = CGFloat(12.00)
    public static let dtIconSize200 = CGFloat(14.00)
    public static let dtIconSize300 = CGFloat(18.00)
    public static let dtIconSize400 = CGFloat(20.00)
    public static let dtIconSize500 = CGFloat(24.00)
    public static let dtIconSize600 = CGFloat(32.00)
    public static let dtIconSize700 = CGFloat(38.00)
    public static let dtIconSize800 = CGFloat(48.00)
    public static let dtIconSizeBorder100 = CGFloat(1.00)
    public static let dtIconSizeBorder200 = CGFloat(1.25)
    public static let dtIconSizeBorder300 = CGFloat(1.50)
    public static let dtIconSizeBorder400 = CGFloat(1.75)
    public static let dtIconSizeBorder500 = CGFloat(1.75)
    public static let dtIconSizeBorder600 = CGFloat(2.50)
    public static let dtIconSizeBorder700 = CGFloat(2.75)
    public static let dtIconSizeBorder800 = CGFloat(3.50)
    public static let dtInputsColorBackgroundDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.058823529411764705)
    public static let dtInputsColorBackgroundDisabled = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.14901960784313725)
    public static let dtInputsColorBackgroundFocus = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.03137254901960784)
    public static let dtInputsColorBorderCritical = UIColor(red: 1.000, green: 0.522, blue: 0.522, alpha: 1)
    public static let dtInputsColorBorderDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.1411764705882353)
    public static let dtInputsColorBorderDisabled = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtInputsColorBorderFocus = UIColor(red: 0.318, green: 0.627, blue: 0.996, alpha: 1)
    public static let dtInputsColorBorderSuccess = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtInputsColorBorderWarning = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtInputsColorForegroundDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtInputsColorForegroundDisabled = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtInputsColorForegroundPlaceholder = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtInputsFontSizeLg = CGFloat(19.00)
    public static let dtInputsFontSizeMd = CGFloat(15.00)
    public static let dtInputsFontSizeSm = CGFloat(12.00)
    public static let dtInputsFontSizeXl = CGFloat(27.00)
    public static let dtInputsFontSizeXs = CGFloat(12.00)
    public static let dtInputsLineHeightDefault = CGFloat(120.00)
    public static let dtInputsSizeBorderDefault = CGFloat(1.50)
    public static let dtInputsSizeBorderStatus = CGFloat(2.00)
    public static let dtInputsSizeRadiusLg = CGFloat(12.00)
    public static let dtInputsSizeRadiusMd = CGFloat(8.00)
    public static let dtInputsSizeRadiusSm = CGFloat(8.00)
    public static let dtInputsSizeRadiusXl = CGFloat(16.00)
    public static let dtInputsSizeRadiusXs = CGFloat(4.00)
    public static let dtOpacity0 = CGFloat(0.00)
    public static let dtOpacity100 = CGFloat(0.05)
    public static let dtOpacity1000 = CGFloat(0.75)
    public static let dtOpacity1100 = CGFloat(0.80)
    public static let dtOpacity1200 = CGFloat(0.90)
    public static let dtOpacity1300 = CGFloat(1.00)
    public static let dtOpacity200 = CGFloat(0.10)
    public static let dtOpacity300 = CGFloat(0.20)
    public static let dtOpacity400 = CGFloat(0.25)
    public static let dtOpacity500 = CGFloat(0.30)
    public static let dtOpacity600 = CGFloat(0.40)
    public static let dtOpacity700 = CGFloat(0.50)
    public static let dtOpacity800 = CGFloat(0.60)
    public static let dtOpacity900 = CGFloat(0.70)
    public static let dtRadioColorBackgroundChecked = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtRadioColorBorderChecked = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtRadioColorBorderUnchecked = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtRadioSizeHeight = CGFloat(16.00)
    public static let dtRadioSizeRadius = CGFloat(50.00)
    public static let dtRadioSizeWidth = CGFloat(16.00)
    public static let dtShadowCard0Blur = CGFloat(2.00)
    public static let dtShadowCard0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.34901960784313724)
    public static let dtShadowCard0Spread = CGFloat(0.00)
    public static let dtShadowCard0Type = "dropShadow"
    public static let dtShadowCard0X = CGFloat(0.00)
    public static let dtShadowCard0Y = CGFloat(1.00)
    public static let dtShadowCard1Blur = CGFloat(4.00)
    public static let dtShadowCard1Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.45098039215686275)
    public static let dtShadowCard1Spread = CGFloat(0.00)
    public static let dtShadowCard1Type = "dropShadow"
    public static let dtShadowCard1X = CGFloat(0.00)
    public static let dtShadowCard1Y = CGFloat(2.00)
    public static let dtShadowCard2Blur = CGFloat(16.00)
    public static let dtShadowCard2Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5803921568627451)
    public static let dtShadowCard2Spread = CGFloat(0.00)
    public static let dtShadowCard2Type = "dropShadow"
    public static let dtShadowCard2X = CGFloat(0.00)
    public static let dtShadowCard2Y = CGFloat(2.00)
    public static let dtShadowCard3Blur = CGFloat(0.00)
    public static let dtShadowCard3Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowCard3Spread = CGFloat(0.00)
    public static let dtShadowCard3Type = "dropShadow"
    public static let dtShadowCard3X = CGFloat(0.50)
    public static let dtShadowCard3Y = CGFloat(0.50)
    public static let dtShadowCard4Blur = CGFloat(0.00)
    public static let dtShadowCard4Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowCard4Spread = CGFloat(0.00)
    public static let dtShadowCard4Type = "dropShadow"
    public static let dtShadowCard4X = CGFloat(-0.50)
    public static let dtShadowCard4Y = CGFloat(-0.50)
    public static let dtShadowCard5Blur = CGFloat(0.00)
    public static let dtShadowCard5Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowCard5Spread = CGFloat(0.00)
    public static let dtShadowCard5Type = "dropShadow"
    public static let dtShadowCard5X = CGFloat(-0.50)
    public static let dtShadowCard5Y = CGFloat(0.50)
    public static let dtShadowCard6Blur = CGFloat(0.00)
    public static let dtShadowCard6Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowCard6Spread = CGFloat(0.00)
    public static let dtShadowCard6Type = "dropShadow"
    public static let dtShadowCard6X = CGFloat(0.50)
    public static let dtShadowCard6Y = CGFloat(-0.50)
    public static let dtShadowExtraLarge0Blur = CGFloat(32.00)
    public static let dtShadowExtraLarge0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5490196078431373)
    public static let dtShadowExtraLarge0Spread = CGFloat(0.00)
    public static let dtShadowExtraLarge0Type = "dropShadow"
    public static let dtShadowExtraLarge0X = CGFloat(0.00)
    public static let dtShadowExtraLarge0Y = CGFloat(2.00)
    public static let dtShadowExtraLarge1Blur = CGFloat(0.00)
    public static let dtShadowExtraLarge1Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowExtraLarge1Spread = CGFloat(0.00)
    public static let dtShadowExtraLarge1Type = "dropShadow"
    public static let dtShadowExtraLarge1X = CGFloat(0.50)
    public static let dtShadowExtraLarge1Y = CGFloat(0.50)
    public static let dtShadowExtraLarge2Blur = CGFloat(0.00)
    public static let dtShadowExtraLarge2Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowExtraLarge2Spread = CGFloat(0.00)
    public static let dtShadowExtraLarge2Type = "dropShadow"
    public static let dtShadowExtraLarge2X = CGFloat(-0.50)
    public static let dtShadowExtraLarge2Y = CGFloat(-0.50)
    public static let dtShadowExtraLarge3Blur = CGFloat(0.00)
    public static let dtShadowExtraLarge3Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowExtraLarge3Spread = CGFloat(0.00)
    public static let dtShadowExtraLarge3Type = "dropShadow"
    public static let dtShadowExtraLarge3X = CGFloat(-0.50)
    public static let dtShadowExtraLarge3Y = CGFloat(0.50)
    public static let dtShadowExtraLarge4Blur = CGFloat(0.00)
    public static let dtShadowExtraLarge4Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowExtraLarge4Spread = CGFloat(0.00)
    public static let dtShadowExtraLarge4Type = "dropShadow"
    public static let dtShadowExtraLarge4X = CGFloat(0.50)
    public static let dtShadowExtraLarge4Y = CGFloat(-0.50)
    public static let dtShadowFocus0Blur = CGFloat(0.00)
    public static let dtShadowFocus0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowFocus0Spread = CGFloat(1.00)
    public static let dtShadowFocus0Type = "dropShadow"
    public static let dtShadowFocus0X = CGFloat(0.00)
    public static let dtShadowFocus0Y = CGFloat(0.00)
    public static let dtShadowFocus1Blur = CGFloat(0.00)
    public static let dtShadowFocus1Color = UIColor(red: 0.318, green: 0.627, blue: 0.996, alpha: 1)
    public static let dtShadowFocus1Spread = CGFloat(4.00)
    public static let dtShadowFocus1Type = "dropShadow"
    public static let dtShadowFocus1X = CGFloat(0.00)
    public static let dtShadowFocus1Y = CGFloat(0.00)
    public static let dtShadowFocusInset0Blur = CGFloat(0.00)
    public static let dtShadowFocusInset0Color = UIColor(red: 0.318, green: 0.627, blue: 0.996, alpha: 1)
    public static let dtShadowFocusInset0Spread = CGFloat(3.00)
    public static let dtShadowFocusInset0Type = "innerShadow"
    public static let dtShadowFocusInset0X = CGFloat(0.00)
    public static let dtShadowFocusInset0Y = CGFloat(0.00)
    public static let dtShadowLarge0Blur = CGFloat(16.00)
    public static let dtShadowLarge0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5490196078431373)
    public static let dtShadowLarge0Spread = CGFloat(0.00)
    public static let dtShadowLarge0Type = "dropShadow"
    public static let dtShadowLarge0X = CGFloat(0.00)
    public static let dtShadowLarge0Y = CGFloat(2.00)
    public static let dtShadowLarge1Blur = CGFloat(0.00)
    public static let dtShadowLarge1Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowLarge1Spread = CGFloat(0.00)
    public static let dtShadowLarge1Type = "dropShadow"
    public static let dtShadowLarge1X = CGFloat(-0.50)
    public static let dtShadowLarge1Y = CGFloat(0.50)
    public static let dtShadowLarge2Blur = CGFloat(0.00)
    public static let dtShadowLarge2Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowLarge2Spread = CGFloat(0.00)
    public static let dtShadowLarge2Type = "dropShadow"
    public static let dtShadowLarge2X = CGFloat(-0.50)
    public static let dtShadowLarge2Y = CGFloat(-0.50)
    public static let dtShadowLarge3Blur = CGFloat(0.00)
    public static let dtShadowLarge3Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowLarge3Spread = CGFloat(0.00)
    public static let dtShadowLarge3Type = "dropShadow"
    public static let dtShadowLarge3X = CGFloat(-0.50)
    public static let dtShadowLarge3Y = CGFloat(0.50)
    public static let dtShadowLarge4Blur = CGFloat(0.00)
    public static let dtShadowLarge4Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowLarge4Spread = CGFloat(0.00)
    public static let dtShadowLarge4Type = "dropShadow"
    public static let dtShadowLarge4X = CGFloat(0.50)
    public static let dtShadowLarge4Y = CGFloat(-0.50)
    public static let dtShadowMedium0Blur = CGFloat(8.00)
    public static let dtShadowMedium0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5490196078431373)
    public static let dtShadowMedium0Spread = CGFloat(0.00)
    public static let dtShadowMedium0Type = "dropShadow"
    public static let dtShadowMedium0X = CGFloat(0.00)
    public static let dtShadowMedium0Y = CGFloat(2.00)
    public static let dtShadowMedium1Blur = CGFloat(0.00)
    public static let dtShadowMedium1Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowMedium1Spread = CGFloat(0.00)
    public static let dtShadowMedium1Type = "dropShadow"
    public static let dtShadowMedium1X = CGFloat(0.50)
    public static let dtShadowMedium1Y = CGFloat(0.50)
    public static let dtShadowMedium2Blur = CGFloat(0.00)
    public static let dtShadowMedium2Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowMedium2Spread = CGFloat(0.00)
    public static let dtShadowMedium2Type = "dropShadow"
    public static let dtShadowMedium2X = CGFloat(-0.50)
    public static let dtShadowMedium2Y = CGFloat(-0.50)
    public static let dtShadowMedium3Blur = CGFloat(0.00)
    public static let dtShadowMedium3Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowMedium3Spread = CGFloat(0.00)
    public static let dtShadowMedium3Type = "dropShadow"
    public static let dtShadowMedium3X = CGFloat(-0.50)
    public static let dtShadowMedium3Y = CGFloat(0.50)
    public static let dtShadowMedium4Blur = CGFloat(0.00)
    public static let dtShadowMedium4Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowMedium4Spread = CGFloat(0.00)
    public static let dtShadowMedium4Type = "dropShadow"
    public static let dtShadowMedium4X = CGFloat(0.50)
    public static let dtShadowMedium4Y = CGFloat(-0.50)
    public static let dtShadowSmall0Blur = CGFloat(4.00)
    public static let dtShadowSmall0Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.45098039215686275)
    public static let dtShadowSmall0Spread = CGFloat(0.00)
    public static let dtShadowSmall0Type = "dropShadow"
    public static let dtShadowSmall0X = CGFloat(0.00)
    public static let dtShadowSmall0Y = CGFloat(2.00)
    public static let dtShadowSmall1Blur = CGFloat(0.00)
    public static let dtShadowSmall1Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowSmall1Spread = CGFloat(0.00)
    public static let dtShadowSmall1Type = "dropShadow"
    public static let dtShadowSmall1X = CGFloat(0.50)
    public static let dtShadowSmall1Y = CGFloat(0.50)
    public static let dtShadowSmall2Blur = CGFloat(0.00)
    public static let dtShadowSmall2Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowSmall2Spread = CGFloat(0.00)
    public static let dtShadowSmall2Type = "dropShadow"
    public static let dtShadowSmall2X = CGFloat(-0.50)
    public static let dtShadowSmall2Y = CGFloat(-0.50)
    public static let dtShadowSmall3Blur = CGFloat(0.00)
    public static let dtShadowSmall3Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowSmall3Spread = CGFloat(0.00)
    public static let dtShadowSmall3Type = "dropShadow"
    public static let dtShadowSmall3X = CGFloat(-0.50)
    public static let dtShadowSmall3Y = CGFloat(0.50)
    public static let dtShadowSmall4Blur = CGFloat(0.00)
    public static let dtShadowSmall4Color = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShadowSmall4Spread = CGFloat(0.00)
    public static let dtShadowSmall4Type = "dropShadow"
    public static let dtShadowSmall4X = CGFloat(0.50)
    public static let dtShadowSmall4Y = CGFloat(-0.50)
    public static let dtSize0 = CGFloat(0.00)
    public static let dtSize0Percent = CGFloat(0.00)
    public static let dtSize100 = CGFloat(1.00)
    public static let dtSize1000 = CGFloat(512.00)
    public static let dtSize1000Negative = CGFloat(-512.00)
    public static let dtSize100Negative = CGFloat(-1.00)
    public static let dtSize100Percent = CGFloat(100.00)
    public static let dtSize1020 = CGFloat(628.00)
    public static let dtSize1020Negative = CGFloat(-628.00)
    public static let dtSize1040 = CGFloat(764.00)
    public static let dtSize1040Negative = CGFloat(-764.00)
    public static let dtSize1050 = CGFloat(768.00)
    public static let dtSize1050Negative = CGFloat(-768.00)
    public static let dtSize1060 = CGFloat(828.00)
    public static let dtSize1060Negative = CGFloat(-828.00)
    public static let dtSize1080 = CGFloat(912.00)
    public static let dtSize1080Negative = CGFloat(-912.00)
    public static let dtSize10Percent = CGFloat(10.00)
    public static let dtSize1100 = CGFloat(1024.00)
    public static let dtSize1100Negative = CGFloat(-1024.00)
    public static let dtSize1115 = CGFloat(1140.00)
    public static let dtSize1115Negative = CGFloat(-1140.00)
    public static let dtSize1120 = CGFloat(1268.00)
    public static let dtSize1120Negative = CGFloat(-1268.00)
    public static let dtSize1125 = CGFloat(1280.00)
    public static let dtSize1125Negative = CGFloat(-1280.00)
    public static let dtSize1130 = CGFloat(1340.00)
    public static let dtSize1130Negative = CGFloat(-1340.00)
    public static let dtSize1150 = CGFloat(1536.00)
    public static let dtSize1150Negative = CGFloat(-1536.00)
    public static let dtSize1200 = CGFloat(2048.00)
    public static let dtSize1200Negative = CGFloat(-2048.00)
    public static let dtSize200 = CGFloat(2.00)
    public static let dtSize200Negative = CGFloat(-2.00)
    public static let dtSize20Percent = CGFloat(20.00)
    public static let dtSize25Percent = CGFloat(25.00)
    public static let dtSize300 = CGFloat(4.00)
    public static let dtSize300Negative = CGFloat(-4.00)
    public static let dtSize30Percent = CGFloat(30.00)
    public static let dtSize33Percent = CGFloat(33.33)
    public static let dtSize350 = CGFloat(6.00)
    public static let dtSize350Negative = CGFloat(-6.00)
    public static let dtSize400 = CGFloat(8.00)
    public static let dtSize400Negative = CGFloat(-8.00)
    public static let dtSize40Percent = CGFloat(40.00)
    public static let dtSize450 = CGFloat(12.00)
    public static let dtSize450Negative = CGFloat(-12.00)
    public static let dtSize50 = CGFloat(0.50)
    public static let dtSize500 = CGFloat(16.00)
    public static let dtSize500Negative = CGFloat(-16.00)
    public static let dtSize50Negative = CGFloat(-0.50)
    public static let dtSize50Percent = CGFloat(50.00)
    public static let dtSize525 = CGFloat(20.00)
    public static let dtSize525Negative = CGFloat(-20.00)
    public static let dtSize550 = CGFloat(24.00)
    public static let dtSize550Negative = CGFloat(-24.00)
    public static let dtSize5Percent = CGFloat(5.00)
    public static let dtSize600 = CGFloat(32.00)
    public static let dtSize600Negative = CGFloat(-32.00)
    public static let dtSize60Percent = CGFloat(60.00)
    public static let dtSize625 = CGFloat(42.00)
    public static let dtSize625Negative = CGFloat(-42.00)
    public static let dtSize650 = CGFloat(48.00)
    public static let dtSize650Negative = CGFloat(-48.00)
    public static let dtSize66Percent = CGFloat(66.70)
    public static let dtSize700 = CGFloat(64.00)
    public static let dtSize700Negative = CGFloat(-64.00)
    public static let dtSize70Percent = CGFloat(70.00)
    public static let dtSize720 = CGFloat(72.00)
    public static let dtSize720Negative = CGFloat(-72.00)
    public static let dtSize730 = CGFloat(84.00)
    public static let dtSize730Negative = CGFloat(-84.00)
    public static let dtSize750 = CGFloat(96.00)
    public static let dtSize750Negative = CGFloat(-96.00)
    public static let dtSize75Percent = CGFloat(75.00)
    public static let dtSize760 = CGFloat(102.00)
    public static let dtSize760Negative = CGFloat(-102.00)
    public static let dtSize775 = CGFloat(114.00)
    public static let dtSize775Negative = CGFloat(-114.00)
    public static let dtSize800 = CGFloat(128.00)
    public static let dtSize800Negative = CGFloat(-128.00)
    public static let dtSize80Percent = CGFloat(80.00)
    public static let dtSize825 = CGFloat(164.00)
    public static let dtSize825Negative = CGFloat(-164.00)
    public static let dtSize850 = CGFloat(192.00)
    public static let dtSize850Negative = CGFloat(-192.00)
    public static let dtSize875 = CGFloat(216.00)
    public static let dtSize875Negative = CGFloat(-216.00)
    public static let dtSize900 = CGFloat(256.00)
    public static let dtSize900Negative = CGFloat(-256.00)
    public static let dtSize905 = CGFloat(264.00)
    public static let dtSize905Negative = CGFloat(-264.00)
    public static let dtSize90Percent = CGFloat(90.00)
    public static let dtSize925 = CGFloat(332.00)
    public static let dtSize925Negative = CGFloat(-332.00)
    public static let dtSize950 = CGFloat(384.00)
    public static let dtSize950Negative = CGFloat(-384.00)
    public static let dtSize95Percent = CGFloat(95.00)
    public static let dtSize975 = CGFloat(464.00)
    public static let dtSize975Negative = CGFloat(-464.00)
    public static let dtSizeBorder0 = CGFloat(0.00)
    public static let dtSizeBorder100 = CGFloat(1.00)
    public static let dtSizeBorder150 = CGFloat(1.50)
    public static let dtSizeBorder200 = CGFloat(2.00)
    public static let dtSizeBorder300 = CGFloat(4.00)
    public static let dtSizeBorder400 = CGFloat(8.00)
    public static let dtSizeBorder50 = CGFloat(0.50)
    public static let dtSizeBorderFocus = CGFloat(3.00)
    public static let dtSizeRadius0 = CGFloat(0.00)
    public static let dtSizeRadius100 = CGFloat(1.00)
    public static let dtSizeRadius200 = CGFloat(2.00)
    public static let dtSizeRadius300 = CGFloat(4.00)
    public static let dtSizeRadius400 = CGFloat(8.00)
    public static let dtSizeRadius500 = CGFloat(16.00)
    public static let dtSizeRadius600 = CGFloat(32.00)
    public static let dtSizeRadiusCircle = CGFloat(50.00)
    public static let dtSizeRadiusPill = CGFloat(102.00)
    public static let dtSpace0 = CGFloat(0.00)
    public static let dtSpace0Percent = CGFloat(0.00)
    public static let dtSpace100 = CGFloat(1.00)
    public static let dtSpace1000 = CGFloat(512.00)
    public static let dtSpace1000Negative = CGFloat(-512.00)
    public static let dtSpace100Negative = CGFloat(-1.00)
    public static let dtSpace100Percent = CGFloat(100.00)
    public static let dtSpace1020 = CGFloat(628.00)
    public static let dtSpace1020Negative = CGFloat(-628.00)
    public static let dtSpace1040 = CGFloat(764.00)
    public static let dtSpace1040Negative = CGFloat(-764.00)
    public static let dtSpace1050 = CGFloat(768.00)
    public static let dtSpace1050Negative = CGFloat(-768.00)
    public static let dtSpace1060 = CGFloat(828.00)
    public static let dtSpace1060Negative = CGFloat(-828.00)
    public static let dtSpace1080 = CGFloat(912.00)
    public static let dtSpace1080Negative = CGFloat(-912.00)
    public static let dtSpace10Percent = CGFloat(10.00)
    public static let dtSpace1100 = CGFloat(1024.00)
    public static let dtSpace1100Negative = CGFloat(-1024.00)
    public static let dtSpace1115 = CGFloat(1140.00)
    public static let dtSpace1115Negative = CGFloat(-1140.00)
    public static let dtSpace1120 = CGFloat(1268.00)
    public static let dtSpace1120Negative = CGFloat(-1268.00)
    public static let dtSpace1125 = CGFloat(1280.00)
    public static let dtSpace1125Negative = CGFloat(-1280.00)
    public static let dtSpace1130 = CGFloat(1340.00)
    public static let dtSpace1130Negative = CGFloat(-1340.00)
    public static let dtSpace1150 = CGFloat(1536.00)
    public static let dtSpace1150Negative = CGFloat(-1536.00)
    public static let dtSpace1200 = CGFloat(2048.00)
    public static let dtSpace1200Negative = CGFloat(-2048.00)
    public static let dtSpace200 = CGFloat(2.00)
    public static let dtSpace200Negative = CGFloat(-2.00)
    public static let dtSpace20Percent = CGFloat(20.00)
    public static let dtSpace25Percent = CGFloat(25.00)
    public static let dtSpace300 = CGFloat(4.00)
    public static let dtSpace300Negative = CGFloat(-4.00)
    public static let dtSpace30Percent = CGFloat(30.00)
    public static let dtSpace33Percent = CGFloat(33.33)
    public static let dtSpace350 = CGFloat(6.00)
    public static let dtSpace350Negative = CGFloat(-6.00)
    public static let dtSpace400 = CGFloat(8.00)
    public static let dtSpace400Negative = CGFloat(-8.00)
    public static let dtSpace40Percent = CGFloat(40.00)
    public static let dtSpace450 = CGFloat(12.00)
    public static let dtSpace450Negative = CGFloat(-12.00)
    public static let dtSpace50 = CGFloat(0.50)
    public static let dtSpace500 = CGFloat(16.00)
    public static let dtSpace500Negative = CGFloat(-16.00)
    public static let dtSpace50Negative = CGFloat(-0.50)
    public static let dtSpace50Percent = CGFloat(50.00)
    public static let dtSpace525 = CGFloat(20.00)
    public static let dtSpace525Negative = CGFloat(-20.00)
    public static let dtSpace550 = CGFloat(24.00)
    public static let dtSpace550Negative = CGFloat(-24.00)
    public static let dtSpace5Percent = CGFloat(5.00)
    public static let dtSpace600 = CGFloat(32.00)
    public static let dtSpace600Negative = CGFloat(-32.00)
    public static let dtSpace60Percent = CGFloat(60.00)
    public static let dtSpace625 = CGFloat(42.00)
    public static let dtSpace625Negative = CGFloat(-42.00)
    public static let dtSpace650 = CGFloat(48.00)
    public static let dtSpace650Negative = CGFloat(-48.00)
    public static let dtSpace66Percent = CGFloat(66.70)
    public static let dtSpace700 = CGFloat(64.00)
    public static let dtSpace700Negative = CGFloat(-64.00)
    public static let dtSpace70Percent = CGFloat(70.00)
    public static let dtSpace720 = CGFloat(72.00)
    public static let dtSpace720Negative = CGFloat(-72.00)
    public static let dtSpace730 = CGFloat(84.00)
    public static let dtSpace730Negative = CGFloat(-84.00)
    public static let dtSpace750 = CGFloat(96.00)
    public static let dtSpace750Negative = CGFloat(-96.00)
    public static let dtSpace75Percent = CGFloat(75.00)
    public static let dtSpace760 = CGFloat(102.00)
    public static let dtSpace760Negative = CGFloat(-102.00)
    public static let dtSpace775 = CGFloat(114.00)
    public static let dtSpace775Negative = CGFloat(-114.00)
    public static let dtSpace800 = CGFloat(128.00)
    public static let dtSpace800Negative = CGFloat(-128.00)
    public static let dtSpace80Percent = CGFloat(80.00)
    public static let dtSpace825 = CGFloat(164.00)
    public static let dtSpace825Negative = CGFloat(-164.00)
    public static let dtSpace850 = CGFloat(192.00)
    public static let dtSpace850Negative = CGFloat(-192.00)
    public static let dtSpace875 = CGFloat(216.00)
    public static let dtSpace875Negative = CGFloat(-216.00)
    public static let dtSpace900 = CGFloat(256.00)
    public static let dtSpace900Negative = CGFloat(-256.00)
    public static let dtSpace905 = CGFloat(264.00)
    public static let dtSpace905Negative = CGFloat(-264.00)
    public static let dtSpace90Percent = CGFloat(90.00)
    public static let dtSpace925 = CGFloat(332.00)
    public static let dtSpace925Negative = CGFloat(-332.00)
    public static let dtSpace950 = CGFloat(384.00)
    public static let dtSpace950Negative = CGFloat(-384.00)
    public static let dtSpace95Percent = CGFloat(95.00)
    public static let dtSpace975 = CGFloat(464.00)
    public static let dtSpace975Negative = CGFloat(-464.00)
    public static let dtThemeColorBase = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtThemeMentionColorBackground = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtThemeMentionColorForeground = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtThemePresenceColorBackgroundAvailable = UIColor(red: 0.690, green: 1.000, blue: 0.639, alpha: 1)
    public static let dtThemePresenceColorBackgroundBusy = UIColor(red: 0.965, green: 0.671, blue: 0.235, alpha: 1)
    public static let dtThemePresenceColorBackgroundBusyUnavailable = UIColor(red: 0.925, green: 0.055, blue: 0.055, alpha: 1)
    public static let dtThemePresenceColorBackgroundOffline = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtThemeSidebarColorBackground = UIColor(red: 0.149, green: 0.149, blue: 0.149, alpha: 1)
    public static let dtThemeSidebarColorForeground = UIColor(red: 0.761, green: 0.761, blue: 0.761, alpha: 1)
    public static let dtThemeSidebarColorForegroundUnread = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtThemeSidebarIconColorForeground = UIColor(red: 0.761, green: 0.761, blue: 0.761, alpha: 1)
    public static let dtThemeSidebarRowColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0)
    public static let dtThemeSidebarRowColorBackgroundActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.23921568627450981)
    public static let dtThemeSidebarRowColorBackgroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.1803921568627451)
    public static let dtThemeSidebarSectionColorForeground = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtThemeSidebarSelectedRowColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.2)
    public static let dtThemeSidebarSelectedRowColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtThemeSidebarStatusColorForeground = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let dtThemeTopbarButtonColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0)
    public static let dtThemeTopbarButtonColorBackgroundActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.10196078431372549)
    public static let dtThemeTopbarButtonColorBackgroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.14901960784313725)
    public static let dtThemeTopbarButtonColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.6509803921568628)
    public static let dtThemeTopbarButtonColorForegroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtThemeTopbarColorBackground = UIColor(red: 0.149, green: 0.149, blue: 0.149, alpha: 1)
    public static let dtThemeTopbarColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.7490196078431373)
    public static let dtThemeTopbarFieldColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.050980392156862744)
    public static let dtThemeTopbarFieldColorBackgroundHover = UIColor(red: 0.102, green: 0.102, blue: 0.102, alpha: 1)
    public static let dtThemeTopbarFieldColorBorder = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0)
    public static let dtThemeTopbarFieldColorBorderActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.2)
    public static let dtThemeTopbarFieldColorBorderHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.10196078431372549)
    public static let dtThemeTopbarFieldColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.5019607843137255)
    public static let dtThemeTopbarFieldColorForegroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.7490196078431373)
    public static let dtThemeTopbarProfileColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.050980392156862744)
    public static let dtThemeTopbarProfileColorBackgroundActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.1411764705882353)
    public static let dtThemeTopbarProfileColorBackgroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.10196078431372549)
    public static let dtThemeTopbarProfileColorBackgroundInverted = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.7490196078431373)
    public static let dtThemeTopbarProfileColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.7490196078431373)
    public static let dtThemeTopbarProfileColorForegroundInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.7490196078431373)
    public static let dtTypographyBodyBaseFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyBodyBaseFontSize = CGFloat(15.00)
    public static let dtTypographyBodyBaseFontWeight = 400
    public static let dtTypographyBodyBaseLineHeight = CGFloat(160.00)
    public static let dtTypographyBodyBaseTextCase = "none"
    public static let dtTypographyBodyCompactBaseFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyBodyCompactBaseFontSize = CGFloat(15.00)
    public static let dtTypographyBodyCompactBaseFontWeight = 400
    public static let dtTypographyBodyCompactBaseLineHeight = CGFloat(140.00)
    public static let dtTypographyBodyCompactBaseTextCase = "none"
    public static let dtTypographyBodyCompactSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyBodyCompactSmallFontSize = CGFloat(12.00)
    public static let dtTypographyBodyCompactSmallFontWeight = 400
    public static let dtTypographyBodyCompactSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyBodyCompactSmallTextCase = "none"
    public static let dtTypographyBodySmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyBodySmallFontSize = CGFloat(12.00)
    public static let dtTypographyBodySmallFontWeight = 400
    public static let dtTypographyBodySmallLineHeight = CGFloat(140.00)
    public static let dtTypographyBodySmallTextCase = "none"
    public static let dtTypographyCodeBaseFontFamily = UIFont.monospacedSystemFont(ofSize: 15, weight: .regular)
    public static let dtTypographyCodeBaseFontSize = CGFloat(15.00)
    public static let dtTypographyCodeBaseFontWeight = 400
    public static let dtTypographyCodeBaseLineHeight = CGFloat(120.00)
    public static let dtTypographyCodeBaseTextCase = "none"
    public static let dtTypographyCodeSmallFontFamily = UIFont.monospacedSystemFont(ofSize: 15, weight: .regular)
    public static let dtTypographyCodeSmallFontSize = CGFloat(12.00)
    public static let dtTypographyCodeSmallFontWeight = 400
    public static let dtTypographyCodeSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyCodeSmallTextCase = "none"
    public static let dtTypographyHeadlineCompactLargeFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineCompactLargeFontSize = CGFloat(19.00)
    public static let dtTypographyHeadlineCompactLargeFontWeight = 700
    public static let dtTypographyHeadlineCompactLargeLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineCompactLargeTextCase = "none"
    public static let dtTypographyHeadlineCompactMediumFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineCompactMediumFontSize = CGFloat(15.00)
    public static let dtTypographyHeadlineCompactMediumFontWeight = 700
    public static let dtTypographyHeadlineCompactMediumLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineCompactMediumTextCase = "none"
    public static let dtTypographyHeadlineCompactSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineCompactSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineCompactSmallFontWeight = 700
    public static let dtTypographyHeadlineCompactSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineCompactSmallTextCase = "none"
    public static let dtTypographyHeadlineCompactSoftSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineCompactSoftSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineCompactSoftSmallFontWeight = 500
    public static let dtTypographyHeadlineCompactSoftSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineCompactSoftSmallTextCase = "none"
    public static let dtTypographyHeadlineExtraExtraLargeFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineExtraExtraLargeFontSize = CGFloat(38.00)
    public static let dtTypographyHeadlineExtraExtraLargeFontWeight = 500
    public static let dtTypographyHeadlineExtraExtraLargeLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineExtraExtraLargeTextCase = "none"
    public static let dtTypographyHeadlineExtraLargeFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineExtraLargeFontSize = CGFloat(27.00)
    public static let dtTypographyHeadlineExtraLargeFontWeight = 500
    public static let dtTypographyHeadlineExtraLargeLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineExtraLargeTextCase = "none"
    public static let dtTypographyHeadlineEyebrowFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineEyebrowFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineEyebrowFontWeight = 400
    public static let dtTypographyHeadlineEyebrowLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineEyebrowTextCase = "uppercase"
    public static let dtTypographyHeadlineLargeFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineLargeFontSize = CGFloat(19.00)
    public static let dtTypographyHeadlineLargeFontWeight = 700
    public static let dtTypographyHeadlineLargeLineHeight = CGFloat(160.00)
    public static let dtTypographyHeadlineLargeTextCase = "none"
    public static let dtTypographyHeadlineMediumFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineMediumFontSize = CGFloat(15.00)
    public static let dtTypographyHeadlineMediumFontWeight = 700
    public static let dtTypographyHeadlineMediumLineHeight = CGFloat(160.00)
    public static let dtTypographyHeadlineMediumTextCase = "none"
    public static let dtTypographyHeadlineSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineSmallFontWeight = 700
    public static let dtTypographyHeadlineSmallLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineSmallTextCase = "none"
    public static let dtTypographyHeadlineSoftSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineSoftSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHeadlineSoftSmallFontWeight = 500
    public static let dtTypographyHeadlineSoftSmallLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineSoftSmallTextCase = "none"
    public static let dtTypographyHelperBaseFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHelperBaseFontSize = CGFloat(15.00)
    public static let dtTypographyHelperBaseFontWeight = 400
    public static let dtTypographyHelperBaseLineHeight = CGFloat(140.00)
    public static let dtTypographyHelperBaseTextCase = "none"
    public static let dtTypographyHelperSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHelperSmallFontSize = CGFloat(12.00)
    public static let dtTypographyHelperSmallFontWeight = 400
    public static let dtTypographyHelperSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyHelperSmallTextCase = "none"
    public static let dtTypographyLabelBaseFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelBaseFontSize = CGFloat(15.00)
    public static let dtTypographyLabelBaseFontWeight = 600
    public static let dtTypographyLabelBaseLineHeight = CGFloat(160.00)
    public static let dtTypographyLabelBaseTextCase = "none"
    public static let dtTypographyLabelCompactBaseFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelCompactBaseFontSize = CGFloat(15.00)
    public static let dtTypographyLabelCompactBaseFontWeight = 600
    public static let dtTypographyLabelCompactBaseLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelCompactBaseTextCase = "none"
    public static let dtTypographyLabelCompactPlainBaseFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelCompactPlainBaseFontSize = CGFloat(15.00)
    public static let dtTypographyLabelCompactPlainBaseFontWeight = 400
    public static let dtTypographyLabelCompactPlainBaseLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelCompactPlainBaseTextCase = "none"
    public static let dtTypographyLabelCompactPlainSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelCompactPlainSmallFontSize = CGFloat(12.00)
    public static let dtTypographyLabelCompactPlainSmallFontWeight = 400
    public static let dtTypographyLabelCompactPlainSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyLabelCompactPlainSmallTextCase = "none"
    public static let dtTypographyLabelCompactSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelCompactSmallFontSize = CGFloat(12.00)
    public static let dtTypographyLabelCompactSmallFontWeight = 600
    public static let dtTypographyLabelCompactSmallLineHeight = CGFloat(120.00)
    public static let dtTypographyLabelCompactSmallTextCase = "none"
    public static let dtTypographyLabelPlainBaseFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelPlainBaseFontSize = CGFloat(15.00)
    public static let dtTypographyLabelPlainBaseFontWeight = 400
    public static let dtTypographyLabelPlainBaseLineHeight = CGFloat(160.00)
    public static let dtTypographyLabelPlainBaseTextCase = "none"
    public static let dtTypographyLabelPlainSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelPlainSmallFontSize = CGFloat(12.00)
    public static let dtTypographyLabelPlainSmallFontWeight = 400
    public static let dtTypographyLabelPlainSmallLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelPlainSmallTextCase = "none"
    public static let dtTypographyLabelSmallFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelSmallFontSize = CGFloat(12.00)
    public static let dtTypographyLabelSmallFontWeight = 600
    public static let dtTypographyLabelSmallLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelSmallTextCase = "none"
}
