
//
// tokens-plum-dark.swift
//

// Do not edit directly, this file was auto-generated.


import UIKit

public enum DialtoneTokensPlumDark {
    public static let dtActionColorBackgroundBaseActive = UIColor(red: 0.565, green: 0.443, blue: 0.988, alpha: 0.302)
    public static let dtActionColorBackgroundBaseDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundBaseHover = UIColor(red: 0.565, green: 0.443, blue: 0.988, alpha: 0.200)
    public static let dtActionColorBackgroundBasePrimaryActive = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtActionColorBackgroundBasePrimaryDefault = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtActionColorBackgroundBasePrimaryHover = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtActionColorBackgroundCriticalActive = UIColor(red: 0.863, green: 0.133, blue: 0.341, alpha: 0.200)
    public static let dtActionColorBackgroundCriticalDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundCriticalHover = UIColor(red: 0.576, green: 0.090, blue: 0.227, alpha: 0.200)
    public static let dtActionColorBackgroundCriticalPrimaryActive = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtActionColorBackgroundCriticalPrimaryDefault = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtActionColorBackgroundCriticalPrimaryHover = UIColor(red: 1.000, green: 0.671, blue: 0.643, alpha: 1)
    public static let dtActionColorBackgroundDisabledDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.302)
    public static let dtActionColorBackgroundInvertedActive = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.180)
    public static let dtActionColorBackgroundInvertedDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundInvertedHover = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.110)
    public static let dtActionColorBackgroundInvertedPrimaryActive = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtActionColorBackgroundInvertedPrimaryDefault = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1)
    public static let dtActionColorBackgroundInvertedPrimaryHover = UIColor(red: 0.114, green: 0.004, blue: 0.333, alpha: 1)
    public static let dtActionColorBackgroundMutedActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.302)
    public static let dtActionColorBackgroundMutedDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundMutedHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.180)
    public static let dtActionColorBackgroundPositiveActive = UIColor(red: 0.000, green: 0.733, blue: 0.424, alpha: 0.278)
    public static let dtActionColorBackgroundPositiveDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtActionColorBackgroundPositiveHover = UIColor(red: 0.000, green: 0.310, blue: 0.180, alpha: 0.278)
    public static let dtActionColorBackgroundPositivePrimaryActive = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtActionColorBackgroundPositivePrimaryDefault = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtActionColorBackgroundPositivePrimaryHover = UIColor(red: 0.820, green: 1.000, blue: 0.463, alpha: 1)
    public static let dtActionColorBorderBaseOutlinedDefault = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtActionColorBorderCriticalOutlinedDefault = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtActionColorBorderInvertedOutlinedDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.180)
    public static let dtActionColorBorderMutedOutlinedDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.220)
    public static let dtActionColorBorderPositiveOutlinedDefault = UIColor(red: 0.820, green: 1.000, blue: 0.463, alpha: 1)
    public static let dtActionColorForegroundBaseActive = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundBaseDefault = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtActionColorForegroundBaseHover = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundBasePrimaryDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorForegroundCriticalActive = UIColor(red: 1.000, green: 0.671, blue: 0.643, alpha: 1)
    public static let dtActionColorForegroundCriticalDefault = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtActionColorForegroundCriticalHover = UIColor(red: 1.000, green: 0.671, blue: 0.643, alpha: 1)
    public static let dtActionColorForegroundCriticalPrimaryDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorForegroundDisabledDefault = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtActionColorForegroundInvertedActive = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorForegroundInvertedDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorForegroundInvertedHover = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtActionColorForegroundInvertedPrimaryActive = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundInvertedPrimaryDefault = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtActionColorForegroundInvertedPrimaryHover = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtActionColorForegroundMutedActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtActionColorForegroundMutedDefault = UIColor(red: 0.780, green: 0.780, blue: 0.780, alpha: 1)
    public static let dtActionColorForegroundMutedHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtActionColorForegroundPositiveActive = UIColor(red: 0.859, green: 1.000, blue: 0.663, alpha: 1)
    public static let dtActionColorForegroundPositiveDefault = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtActionColorForegroundPositiveHover = UIColor(red: 0.859, green: 1.000, blue: 0.663, alpha: 1)
    public static let dtActionColorForegroundPositivePrimaryDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtAvatarColorBackground000 = UIColor(red: 0.878, green: 0.878, blue: 0.878, alpha: 1)
    public static let dtAvatarColorBackground100 = UIColor(red: 0.102, green: 0.639, blue: 0.251, alpha: 1)
    public static let dtAvatarColorBackground1000 = UIColor(red: 0.714, green: 0.812, blue: 1.000, alpha: 1)
    public static let dtAvatarColorBackground1100 = UIColor(red: 0.945, green: 0.718, blue: 0.910, alpha: 1)
    public static let dtAvatarColorBackground1200 = UIColor(red: 0.925, green: 0.467, blue: 0.741, alpha: 1)
    public static let dtAvatarColorBackground1300 = UIColor(red: 1.000, green: 0.404, blue: 0.745, alpha: 1)
    public static let dtAvatarColorBackground1400 = UIColor(red: 0.973, green: 0.494, blue: 0.494, alpha: 1)
    public static let dtAvatarColorBackground1500 = UIColor(red: 0.925, green: 0.659, blue: 0.467, alpha: 1)
    public static let dtAvatarColorBackground1600 = UIColor(red: 1.000, green: 0.745, blue: 0.255, alpha: 1)
    public static let dtAvatarColorBackground1700 = UIColor(red: 1.000, green: 0.839, blue: 0.275, alpha: 1)
    public static let dtAvatarColorBackground1800 = UIColor(red: 0.945, green: 0.855, blue: 0.718, alpha: 1)
    public static let dtAvatarColorBackground200 = UIColor(red: 0.667, green: 1.000, blue: 0.514, alpha: 1)
    public static let dtAvatarColorBackground300 = UIColor(red: 0.678, green: 0.918, blue: 0.533, alpha: 1)
    public static let dtAvatarColorBackground400 = UIColor(red: 0.467, green: 0.925, blue: 0.651, alpha: 1)
    public static let dtAvatarColorBackground500 = UIColor(red: 0.478, green: 0.929, blue: 0.741, alpha: 1)
    public static let dtAvatarColorBackground600 = UIColor(red: 0.467, green: 0.871, blue: 0.925, alpha: 1)
    public static let dtAvatarColorBackground700 = UIColor(red: 0.369, green: 0.847, blue: 1.000, alpha: 1)
    public static let dtAvatarColorBackground800 = UIColor(red: 0.600, green: 0.906, blue: 1.000, alpha: 1)
    public static let dtAvatarColorBackground900 = UIColor(red: 0.318, green: 0.627, blue: 0.996, alpha: 1)
    public static let dtAvatarColorForeground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtBadgeColorBackgroundBulletin = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtBadgeColorBackgroundBulletinSubtle = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtBadgeColorBackgroundCritical = UIColor(red: 0.392, green: 0.031, blue: 0.137, alpha: 1)
    public static let dtBadgeColorBackgroundDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.180)
    public static let dtBadgeColorBackgroundInfo = UIColor(red: 0.000, green: 0.192, blue: 0.396, alpha: 1)
    public static let dtBadgeColorBackgroundSuccess = UIColor(red: 0.000, green: 0.310, blue: 0.180, alpha: 1)
    public static let dtBadgeColorBackgroundWarning = UIColor(red: 0.325, green: 0.196, blue: 0.016, alpha: 1)
    public static let dtBadgeColorBorderBulletinSubtle = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 0.502)
    public static let dtBadgeColorBorderDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.141)
    public static let dtBadgeColorForegroundAi = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtBadgeColorForegroundBulletin = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtBadgeColorForegroundBulletinSubtle = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtBadgeColorForegroundDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtButtonFontSizeLg = CGFloat(10.00) * 1.9
    public static let dtButtonFontSizeMd = CGFloat(10.00) * 1.5
    public static let dtButtonFontSizeSm = CGFloat(10.00) * 1.2
    public static let dtButtonFontSizeXl = CGFloat(10.00) * 2.7
    public static let dtButtonFontSizeXs = CGFloat(10.00) * 1.2
    public static let dtButtonFontWeightLg = 500
    public static let dtButtonFontWeightMd = 600
    public static let dtButtonFontWeightSm = 600
    public static let dtButtonFontWeightXl = 400
    public static let dtButtonFontWeightXs = 600
    public static let dtButtonLineHeightLg = CGFloat(120.00)
    public static let dtButtonLineHeightMd = CGFloat(120.00)
    public static let dtButtonLineHeightSm = CGFloat(120.00)
    public static let dtButtonLineHeightXl = CGFloat(120.00)
    public static let dtButtonLineHeightXs = CGFloat(120.00)
    public static let dtButtonSizeRadiusLg = CGFloat(12.00)
    public static let dtButtonSizeRadiusMd = CGFloat(8.00)
    public static let dtButtonSizeRadiusSm = CGFloat(8.00)
    public static let dtButtonSizeRadiusXl = CGFloat(16.00)
    public static let dtButtonSizeRadiusXs = CGFloat(4.00)
    public static let dtCheckboxColorBackgroundChecked = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtCheckboxColorBorderChecked = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtCheckboxColorBorderUnchecked = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.361)
    public static let dtCheckboxColorBorderUncheckedHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.502)
    public static let dtCheckboxColorForegroundChecked = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtCheckboxColorForegroundDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtCheckboxSizeHeight = CGFloat(16.00)
    public static let dtCheckboxSizeRadius = CGFloat(4.00)
    public static let dtCheckboxSizeWidth = CGFloat(16.00)
    public static let dtColorBorderAccent = UIColor(red: 1.000, green: 0.106, blue: 0.643, alpha: 1)
    public static let dtColorBorderBold = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.502)
    public static let dtColorBorderBoldInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.502)
    public static let dtColorBorderBrand = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtColorBorderBrandInverted = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorBorderBrandStrong = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtColorBorderBrandStrongInverted = UIColor(red: 0.314, green: 0.137, blue: 0.867, alpha: 1)
    public static let dtColorBorderBrandSubtle = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorBorderBrandSubtleInverted = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtColorBorderCritical = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtColorBorderCriticalInverted = UIColor(red: 1.000, green: 0.075, blue: 0.337, alpha: 1)
    public static let dtColorBorderCriticalStrong = UIColor(red: 1.000, green: 0.671, blue: 0.643, alpha: 1)
    public static let dtColorBorderCriticalStrongInverted = UIColor(red: 0.576, green: 0.090, blue: 0.227, alpha: 1)
    public static let dtColorBorderCriticalSubtle = UIColor(red: 0.576, green: 0.090, blue: 0.227, alpha: 1)
    public static let dtColorBorderCriticalSubtleInverted = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtColorBorderDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.220)
    public static let dtColorBorderDefaultInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.180)
    public static let dtColorBorderFocus = UIColor(red: 0.231, green: 0.588, blue: 0.875, alpha: 1)
    public static let dtColorBorderModerate = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.361)
    public static let dtColorBorderModerateInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.341)
    public static let dtColorBorderSubtle = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.141)
    public static let dtColorBorderSubtleInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.102)
    public static let dtColorBorderSuccess = UIColor(red: 0.820, green: 1.000, blue: 0.463, alpha: 1)
    public static let dtColorBorderSuccessInverted = UIColor(red: 0.192, green: 0.698, blue: 0.216, alpha: 1)
    public static let dtColorBorderSuccessStrong = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtColorBorderSuccessStrongInverted = UIColor(red: 0.000, green: 0.310, blue: 0.180, alpha: 1)
    public static let dtColorBorderSuccessSubtle = UIColor(red: 0.322, green: 0.788, blue: 0.149, alpha: 1)
    public static let dtColorBorderSuccessSubtleInverted = UIColor(red: 0.820, green: 1.000, blue: 0.463, alpha: 1)
    public static let dtColorBorderWarning = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtColorBorderWarningInverted = UIColor(red: 1.000, green: 0.620, blue: 0.055, alpha: 1)
    public static let dtColorBorderWarningStrong = UIColor(red: 1.000, green: 0.910, blue: 0.612, alpha: 1)
    public static let dtColorBorderWarningStrongInverted = UIColor(red: 0.835, green: 0.498, blue: 0.000, alpha: 1)
    public static let dtColorBorderWarningSubtle = UIColor(red: 1.000, green: 0.620, blue: 0.055, alpha: 1)
    public static let dtColorBorderWarningSubtleInverted = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtColorChartAccent = UIColor(red: 0.161, green: 0.435, blue: 0.639, alpha: 1)
    public static let dtColorChartAccentHover = UIColor(red: 0.235, green: 0.537, blue: 0.765, alpha: 1)
    public static let dtColorChartAccentSelected = UIColor(red: 0.431, green: 0.651, blue: 0.886, alpha: 1)
    public static let dtColorChartCategorical01 = UIColor(red: 0.314, green: 0.137, blue: 0.867, alpha: 1)
    public static let dtColorChartCategorical01Hover = UIColor(red: 0.396, green: 0.220, blue: 0.945, alpha: 1)
    public static let dtColorChartCategorical01Selected = UIColor(red: 0.565, green: 0.443, blue: 0.988, alpha: 1)
    public static let dtColorChartCategorical02 = UIColor(red: 0.851, green: 0.067, blue: 0.557, alpha: 1)
    public static let dtColorChartCategorical02Hover = UIColor(red: 1.000, green: 0.106, blue: 0.643, alpha: 1)
    public static let dtColorChartCategorical02Selected = UIColor(red: 0.996, green: 0.529, blue: 0.718, alpha: 1)
    public static let dtColorChartCategorical03 = UIColor(red: 0.090, green: 0.408, blue: 0.776, alpha: 1)
    public static let dtColorChartCategorical03Hover = UIColor(red: 0.173, green: 0.514, blue: 0.835, alpha: 1)
    public static let dtColorChartCategorical03Selected = UIColor(red: 0.290, green: 0.663, blue: 0.918, alpha: 1)
    public static let dtColorChartCategorical04 = UIColor(red: 0.835, green: 0.498, blue: 0.000, alpha: 1)
    public static let dtColorChartCategorical04Hover = UIColor(red: 0.918, green: 0.561, blue: 0.027, alpha: 1)
    public static let dtColorChartCategorical04Selected = UIColor(red: 1.000, green: 0.741, blue: 0.282, alpha: 1)
    public static let dtColorChartCategorical05 = UIColor(red: 0.000, green: 0.557, blue: 0.322, alpha: 1)
    public static let dtColorChartCategorical05Hover = UIColor(red: 0.192, green: 0.698, blue: 0.216, alpha: 1)
    public static let dtColorChartCategorical05Selected = UIColor(red: 0.322, green: 0.788, blue: 0.149, alpha: 1)
    public static let dtColorChartCategorical06 = UIColor(red: 0.749, green: 0.020, blue: 0.941, alpha: 1)
    public static let dtColorChartCategorical06Hover = UIColor(red: 0.886, green: 0.125, blue: 0.976, alpha: 1)
    public static let dtColorChartCategorical06Selected = UIColor(red: 0.984, green: 0.475, blue: 0.953, alpha: 1)
    public static let dtColorChartCategorical07 = UIColor(red: 0.525, green: 0.149, blue: 0.035, alpha: 1)
    public static let dtColorChartCategorical07Hover = UIColor(red: 0.663, green: 0.188, blue: 0.035, alpha: 1)
    public static let dtColorChartCategorical07Selected = UIColor(red: 0.957, green: 0.278, blue: 0.063, alpha: 1)
    public static let dtColorChartCategorical08 = UIColor(red: 0.588, green: 0.557, blue: 0.133, alpha: 1)
    public static let dtColorChartCategorical08Hover = UIColor(red: 0.714, green: 0.675, blue: 0.145, alpha: 1)
    public static let dtColorChartCategorical08Selected = UIColor(red: 0.863, green: 0.820, blue: 0.220, alpha: 1)
    public static let dtColorChartCategorical09 = UIColor(red: 0.686, green: 0.000, blue: 0.196, alpha: 1)
    public static let dtColorChartCategorical09Hover = UIColor(red: 0.851, green: 0.039, blue: 0.271, alpha: 1)
    public static let dtColorChartCategorical09Selected = UIColor(red: 1.000, green: 0.255, blue: 0.357, alpha: 1)
    public static let dtColorChartCategorical10 = UIColor(red: 0.133, green: 0.529, blue: 0.510, alpha: 1)
    public static let dtColorChartCategorical10Hover = UIColor(red: 0.208, green: 0.718, blue: 0.694, alpha: 1)
    public static let dtColorChartCategorical10Selected = UIColor(red: 0.537, green: 0.910, blue: 0.890, alpha: 1)
    public static let dtColorChartCategorical11 = UIColor(red: 0.157, green: 0.149, blue: 0.141, alpha: 1)
    public static let dtColorChartCategorical11Hover = UIColor(red: 0.133, green: 0.125, blue: 0.122, alpha: 1)
    public static let dtColorChartCategorical11Selected = UIColor(red: 0.110, green: 0.106, blue: 0.098, alpha: 1)
    public static let dtColorChartCategorical12 = UIColor(red: 0.314, green: 0.137, blue: 0.867, alpha: 1)
    public static let dtColorChartCategorical12Hover = UIColor(red: 0.267, green: 0.114, blue: 0.741, alpha: 1)
    public static let dtColorChartCategorical12Selected = UIColor(red: 0.220, green: 0.094, blue: 0.608, alpha: 1)
    public static let dtColorChartCategorical13 = UIColor(red: 0.851, green: 0.067, blue: 0.557, alpha: 1)
    public static let dtColorChartCategorical13Hover = UIColor(red: 0.722, green: 0.059, blue: 0.475, alpha: 1)
    public static let dtColorChartCategorical13Selected = UIColor(red: 0.596, green: 0.047, blue: 0.388, alpha: 1)
    public static let dtColorChartCategorical14 = UIColor(red: 0.090, green: 0.408, blue: 0.776, alpha: 1)
    public static let dtColorChartCategorical14Hover = UIColor(red: 0.078, green: 0.345, blue: 0.659, alpha: 1)
    public static let dtColorChartCategorical14Selected = UIColor(red: 0.063, green: 0.286, blue: 0.545, alpha: 1)
    public static let dtColorChartCategorical15 = UIColor(red: 0.835, green: 0.498, blue: 0.000, alpha: 1)
    public static let dtColorChartCategorical15Hover = UIColor(red: 0.710, green: 0.424, blue: 0.000, alpha: 1)
    public static let dtColorChartCategorical15Selected = UIColor(red: 0.584, green: 0.349, blue: 0.000, alpha: 1)
    public static let dtColorChartCategorical16 = UIColor(red: 0.000, green: 0.557, blue: 0.322, alpha: 1)
    public static let dtColorChartCategorical16Hover = UIColor(red: 0.000, green: 0.475, blue: 0.275, alpha: 1)
    public static let dtColorChartCategorical16Selected = UIColor(red: 0.000, green: 0.388, blue: 0.224, alpha: 1)
    public static let dtColorChartCategorical17 = UIColor(red: 0.749, green: 0.020, blue: 0.941, alpha: 1)
    public static let dtColorChartCategorical17Hover = UIColor(red: 0.635, green: 0.016, blue: 0.800, alpha: 1)
    public static let dtColorChartCategorical17Selected = UIColor(red: 0.525, green: 0.016, blue: 0.659, alpha: 1)
    public static let dtColorChartCategorical18 = UIColor(red: 0.525, green: 0.149, blue: 0.035, alpha: 1)
    public static let dtColorChartCategorical18Hover = UIColor(red: 0.447, green: 0.125, blue: 0.031, alpha: 1)
    public static let dtColorChartCategorical18Selected = UIColor(red: 0.369, green: 0.106, blue: 0.024, alpha: 1)
    public static let dtColorChartCategorical19 = UIColor(red: 0.588, green: 0.557, blue: 0.133, alpha: 1)
    public static let dtColorChartCategorical19Hover = UIColor(red: 0.498, green: 0.475, blue: 0.114, alpha: 1)
    public static let dtColorChartCategorical19Selected = UIColor(red: 0.412, green: 0.388, blue: 0.094, alpha: 1)
    public static let dtColorChartCategorical20 = UIColor(red: 0.090, green: 0.408, blue: 0.776, alpha: 1)
    public static let dtColorChartCategorical20Hover = UIColor(red: 0.078, green: 0.345, blue: 0.659, alpha: 1)
    public static let dtColorChartCategorical20Selected = UIColor(red: 0.063, green: 0.286, blue: 0.545, alpha: 1)
    public static let dtColorChartCategorical21 = UIColor(red: 0.133, green: 0.529, blue: 0.510, alpha: 1)
    public static let dtColorChartCategorical21Hover = UIColor(red: 0.114, green: 0.451, blue: 0.435, alpha: 1)
    public static let dtColorChartCategorical21Selected = UIColor(red: 0.094, green: 0.369, blue: 0.357, alpha: 1)
    public static let dtColorChartCategorical22 = UIColor(red: 0.157, green: 0.149, blue: 0.141, alpha: 1)
    public static let dtColorChartCategorical22Hover = UIColor(red: 0.133, green: 0.125, blue: 0.122, alpha: 1)
    public static let dtColorChartCategorical22Selected = UIColor(red: 0.110, green: 0.106, blue: 0.098, alpha: 1)
    public static let dtColorChartCategorical23 = UIColor(red: 0.314, green: 0.137, blue: 0.867, alpha: 1)
    public static let dtColorChartCategorical23Hover = UIColor(red: 0.267, green: 0.114, blue: 0.741, alpha: 1)
    public static let dtColorChartCategorical23Selected = UIColor(red: 0.220, green: 0.094, blue: 0.608, alpha: 1)
    public static let dtColorChartCategorical24 = UIColor(red: 0.851, green: 0.067, blue: 0.557, alpha: 1)
    public static let dtColorChartCategorical24Hover = UIColor(red: 0.722, green: 0.059, blue: 0.475, alpha: 1)
    public static let dtColorChartCategorical24Selected = UIColor(red: 0.596, green: 0.047, blue: 0.388, alpha: 1)
    public static let dtColorChartCategorical25 = UIColor(red: 0.090, green: 0.408, blue: 0.776, alpha: 1)
    public static let dtColorChartCategorical25Hover = UIColor(red: 0.078, green: 0.345, blue: 0.659, alpha: 1)
    public static let dtColorChartCategorical25Selected = UIColor(red: 0.063, green: 0.286, blue: 0.545, alpha: 1)
    public static let dtColorChartCategorical26 = UIColor(red: 0.835, green: 0.498, blue: 0.000, alpha: 1)
    public static let dtColorChartCategorical26Hover = UIColor(red: 0.710, green: 0.424, blue: 0.000, alpha: 1)
    public static let dtColorChartCategorical26Selected = UIColor(red: 0.584, green: 0.349, blue: 0.000, alpha: 1)
    public static let dtColorChartCategorical27 = UIColor(red: 0.000, green: 0.557, blue: 0.322, alpha: 1)
    public static let dtColorChartCategorical27Hover = UIColor(red: 0.000, green: 0.475, blue: 0.275, alpha: 1)
    public static let dtColorChartCategorical27Selected = UIColor(red: 0.000, green: 0.388, blue: 0.224, alpha: 1)
    public static let dtColorChartCategorical28 = UIColor(red: 0.090, green: 0.408, blue: 0.776, alpha: 1)
    public static let dtColorChartCategorical28Hover = UIColor(red: 0.078, green: 0.345, blue: 0.659, alpha: 1)
    public static let dtColorChartCategorical28Selected = UIColor(red: 0.063, green: 0.286, blue: 0.545, alpha: 1)
    public static let dtColorChartCategorical29 = UIColor(red: 0.525, green: 0.149, blue: 0.035, alpha: 1)
    public static let dtColorChartCategorical29Hover = UIColor(red: 0.447, green: 0.125, blue: 0.031, alpha: 1)
    public static let dtColorChartCategorical29Selected = UIColor(red: 0.369, green: 0.106, blue: 0.024, alpha: 1)
    public static let dtColorChartCategorical30 = UIColor(red: 0.588, green: 0.557, blue: 0.133, alpha: 1)
    public static let dtColorChartCategorical30Hover = UIColor(red: 0.498, green: 0.475, blue: 0.114, alpha: 1)
    public static let dtColorChartCategorical30Selected = UIColor(red: 0.412, green: 0.388, blue: 0.094, alpha: 1)
    public static let dtColorChartCritical = UIColor(red: 0.686, green: 0.000, blue: 0.196, alpha: 1)
    public static let dtColorChartCriticalHover = UIColor(red: 0.851, green: 0.039, blue: 0.271, alpha: 1)
    public static let dtColorChartCriticalSelected = UIColor(red: 1.000, green: 0.255, blue: 0.357, alpha: 1)
    public static let dtColorChartInfo = UIColor(red: 0.173, green: 0.514, blue: 0.835, alpha: 1)
    public static let dtColorChartInfoHover = UIColor(red: 0.231, green: 0.588, blue: 0.875, alpha: 1)
    public static let dtColorChartInfoSelected = UIColor(red: 0.373, green: 0.769, blue: 0.976, alpha: 1)
    public static let dtColorChartNeutral = UIColor(red: 0.529, green: 0.502, blue: 0.482, alpha: 1)
    public static let dtColorChartNeutralHover = UIColor(red: 0.667, green: 0.643, blue: 0.631, alpha: 1)
    public static let dtColorChartNeutralSelected = UIColor(red: 0.878, green: 0.863, blue: 0.851, alpha: 1)
    public static let dtColorChartPositive = UIColor(red: 0.192, green: 0.698, blue: 0.216, alpha: 1)
    public static let dtColorChartPositiveHover = UIColor(red: 0.322, green: 0.788, blue: 0.149, alpha: 1)
    public static let dtColorChartPositiveSelected = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtColorChartSequential01 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential01Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential01Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential02 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential02Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential02Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential03 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential03Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential03Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential04 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential04Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential04Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential05 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential05Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential05Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential06 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential06Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential06Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential07 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential07Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential07Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential08 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential08Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential08Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential09 = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential09Hover = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential09Selected = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequential10 = UIColor(red: 0.827, green: 0.878, blue: 0.957, alpha: 1)
    public static let dtColorChartSequential10Hover = UIColor(red: 0.827, green: 0.878, blue: 0.957, alpha: 1)
    public static let dtColorChartSequential10Selected = UIColor(red: 0.827, green: 0.878, blue: 0.957, alpha: 1)
    public static let dtColorChartSequentialRange00End = UIColor(red: 0.827, green: 0.878, blue: 0.957, alpha: 1)
    public static let dtColorChartSequentialRange00Start = UIColor(red: 0.020, green: 0.129, blue: 0.200, alpha: 1)
    public static let dtColorChartSequentialRange01End = UIColor(red: 0.961, green: 0.941, blue: 1.000, alpha: 1)
    public static let dtColorChartSequentialRange01Start = UIColor(red: 0.227, green: 0.114, blue: 0.584, alpha: 1)
    public static let dtColorChartSequentialRange02End = UIColor(red: 1.000, green: 0.878, blue: 0.949, alpha: 1)
    public static let dtColorChartSequentialRange02Start = UIColor(red: 0.400, green: 0.133, blue: 0.318, alpha: 1)
    public static let dtColorChartSequentialRange03End = UIColor(red: 0.741, green: 0.910, blue: 1.000, alpha: 1)
    public static let dtColorChartSequentialRange03Start = UIColor(red: 0.000, green: 0.192, blue: 0.396, alpha: 1)
    public static let dtColorChartSequentialRange04End = UIColor(red: 1.000, green: 0.957, blue: 0.800, alpha: 1)
    public static let dtColorChartSequentialRange04Start = UIColor(red: 0.325, green: 0.196, blue: 0.016, alpha: 1)
    public static let dtColorChartSequentialRange05End = UIColor(red: 0.929, green: 0.976, blue: 0.922, alpha: 1)
    public static let dtColorChartSequentialRange05Start = UIColor(red: 0.000, green: 0.310, blue: 0.180, alpha: 1)
    public static let dtColorChartSequentialRange06End = UIColor(red: 1.000, green: 0.902, blue: 0.992, alpha: 1)
    public static let dtColorChartSequentialRange06Start = UIColor(red: 0.318, green: 0.118, blue: 0.463, alpha: 1)
    public static let dtColorChartSequentialRange07End = UIColor(red: 0.984, green: 0.933, blue: 0.914, alpha: 1)
    public static let dtColorChartSequentialRange07Start = UIColor(red: 0.396, green: 0.118, blue: 0.024, alpha: 1)
    public static let dtColorChartSequentialRange08End = UIColor(red: 0.992, green: 0.945, blue: 0.765, alpha: 1)
    public static let dtColorChartSequentialRange08Start = UIColor(red: 0.302, green: 0.282, blue: 0.059, alpha: 1)
    public static let dtColorChartSequentialRange09End = UIColor(red: 1.000, green: 0.898, blue: 0.902, alpha: 1)
    public static let dtColorChartSequentialRange09Start = UIColor(red: 0.392, green: 0.031, blue: 0.137, alpha: 1)
    public static let dtColorChartSequentialRange10End = UIColor(red: 0.835, green: 0.957, blue: 0.949, alpha: 1)
    public static let dtColorChartSequentialRange10Start = UIColor(red: 0.067, green: 0.302, blue: 0.290, alpha: 1)
    public static let dtColorChartWarning = UIColor(red: 0.835, green: 0.498, blue: 0.000, alpha: 1)
    public static let dtColorChartWarningHover = UIColor(red: 0.918, green: 0.561, blue: 0.027, alpha: 1)
    public static let dtColorChartWarningSelected = UIColor(red: 1.000, green: 0.741, blue: 0.282, alpha: 1)
    public static let dtColorForegroundCritical = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtColorForegroundCriticalInverted = UIColor(red: 1.000, green: 0.075, blue: 0.337, alpha: 1)
    public static let dtColorForegroundCriticalStrong = UIColor(red: 1.000, green: 0.671, blue: 0.643, alpha: 1)
    public static let dtColorForegroundCriticalStrongInverted = UIColor(red: 0.392, green: 0.031, blue: 0.137, alpha: 1)
    public static let dtColorForegroundDisabled = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtColorForegroundDisabledInverted = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorForegroundMuted = UIColor(red: 0.831, green: 0.831, blue: 0.831, alpha: 0.651)
    public static let dtColorForegroundMutedInverted = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 0.651)
    public static let dtColorForegroundPlaceholder = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtColorForegroundPlaceholderInverted = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorForegroundPrimary = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtColorForegroundPrimaryInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtColorForegroundSecondary = UIColor(red: 0.780, green: 0.780, blue: 0.780, alpha: 1)
    public static let dtColorForegroundSecondaryInverted = UIColor(red: 0.239, green: 0.239, blue: 0.239, alpha: 1)
    public static let dtColorForegroundSuccess = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtColorForegroundSuccessInverted = UIColor(red: 0.000, green: 0.557, blue: 0.322, alpha: 1)
    public static let dtColorForegroundSuccessStrong = UIColor(red: 0.859, green: 1.000, blue: 0.663, alpha: 1)
    public static let dtColorForegroundSuccessStrongInverted = UIColor(red: 0.000, green: 0.310, blue: 0.180, alpha: 1)
    public static let dtColorForegroundTertiary = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtColorForegroundTertiaryInverted = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorForegroundWarning = UIColor(red: 1.000, green: 0.741, blue: 0.282, alpha: 1)
    public static let dtColorForegroundWarningInverted = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtColorLinkCritical = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtColorLinkCriticalHover = UIColor(red: 1.000, green: 0.671, blue: 0.643, alpha: 1)
    public static let dtColorLinkCriticalInverted = UIColor(red: 1.000, green: 0.075, blue: 0.337, alpha: 1)
    public static let dtColorLinkCriticalInvertedHover = UIColor(red: 0.392, green: 0.031, blue: 0.137, alpha: 1)
    public static let dtColorLinkDisabled = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtColorLinkDisabledHover = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtColorLinkDisabledInverted = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorLinkDisabledInvertedHover = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorLinkMuted = UIColor(red: 0.780, green: 0.780, blue: 0.780, alpha: 1)
    public static let dtColorLinkMutedHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtColorLinkMutedInverted = UIColor(red: 0.239, green: 0.239, blue: 0.239, alpha: 1)
    public static let dtColorLinkMutedInvertedHover = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1)
    public static let dtColorLinkPrimary = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtColorLinkPrimaryHover = UIColor(red: 0.827, green: 0.737, blue: 1.000, alpha: 1)
    public static let dtColorLinkPrimaryInverted = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorLinkPrimaryInvertedHover = UIColor(red: 0.314, green: 0.137, blue: 0.867, alpha: 1)
    public static let dtColorLinkSuccess = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtColorLinkSuccessHover = UIColor(red: 0.859, green: 1.000, blue: 0.663, alpha: 1)
    public static let dtColorLinkSuccessInverted = UIColor(red: 0.000, green: 0.557, blue: 0.322, alpha: 1)
    public static let dtColorLinkSuccessInvertedHover = UIColor(red: 0.000, green: 0.310, blue: 0.180, alpha: 1)
    public static let dtColorLinkWarning = UIColor(red: 1.000, green: 0.741, blue: 0.282, alpha: 1)
    public static let dtColorLinkWarningHover = UIColor(red: 1.000, green: 0.910, blue: 0.612, alpha: 1)
    public static let dtColorLinkWarningInverted = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 1)
    public static let dtColorLinkWarningInvertedHover = UIColor(red: 0.325, green: 0.196, blue: 0.016, alpha: 1)
    public static let dtColorSurfaceBackdrop = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.651)
    public static let dtColorSurfaceBold = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorSurfaceBoldInverted = UIColor(red: 0.831, green: 0.831, blue: 0.831, alpha: 1)
    public static let dtColorSurfaceBoldOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.302)
    public static let dtColorSurfaceBoldOpaqueInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.180)
    public static let dtColorSurfaceBrand = UIColor(red: 0.114, green: 0.004, blue: 0.333, alpha: 1)
    public static let dtColorSurfaceBrandInverted = UIColor(red: 0.961, green: 0.941, blue: 1.000, alpha: 1)
    public static let dtColorSurfaceBrandOpaque = UIColor(red: 0.114, green: 0.004, blue: 0.333, alpha: 0.702)
    public static let dtColorSurfaceBrandOpaqueInverted = UIColor(red: 0.961, green: 0.941, blue: 1.000, alpha: 0.800)
    public static let dtColorSurfaceBrandStrong = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtColorSurfaceBrandStrongInverted = UIColor(red: 0.486, green: 0.322, blue: 1.000, alpha: 1)
    public static let dtColorSurfaceBrandSubtle = UIColor(red: 0.063, green: 0.008, blue: 0.173, alpha: 1)
    public static let dtColorSurfaceBrandSubtleInverted = UIColor(red: 0.976, green: 0.965, blue: 1.000, alpha: 1)
    public static let dtColorSurfaceBrandSubtleOpaque = UIColor(red: 0.063, green: 0.008, blue: 0.173, alpha: 0.651)
    public static let dtColorSurfaceBrandSubtleOpaqueInverted = UIColor(red: 0.976, green: 0.965, blue: 1.000, alpha: 0.659)
    public static let dtColorSurfaceContrast = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtColorSurfaceContrastInverted = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1)
    public static let dtColorSurfaceContrastOpaque = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.969)
    public static let dtColorSurfaceContrastOpaqueInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.969)
    public static let dtColorSurfaceCritical = UIColor(red: 0.220, green: 0.000, blue: 0.063, alpha: 1)
    public static let dtColorSurfaceCriticalInverted = UIColor(red: 1.000, green: 0.898, blue: 0.902, alpha: 1)
    public static let dtColorSurfaceCriticalOpaque = UIColor(red: 0.576, green: 0.090, blue: 0.227, alpha: 0.200)
    public static let dtColorSurfaceCriticalOpaqueInverted = UIColor(red: 1.000, green: 0.671, blue: 0.643, alpha: 0.502)
    public static let dtColorSurfaceCriticalStrong = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtColorSurfaceCriticalStrongInverted = UIColor(red: 0.851, green: 0.039, blue: 0.271, alpha: 1)
    public static let dtColorSurfaceCriticalSubtle = UIColor(red: 0.110, green: 0.000, blue: 0.031, alpha: 1)
    public static let dtColorSurfaceCriticalSubtleInverted = UIColor(red: 1.000, green: 0.949, blue: 0.953, alpha: 1)
    public static let dtColorSurfaceCriticalSubtleOpaque = UIColor(red: 0.110, green: 0.004, blue: 0.031, alpha: 0.600)
    public static let dtColorSurfaceCriticalSubtleOpaqueInverted = UIColor(red: 1.000, green: 0.898, blue: 0.902, alpha: 0.800)
    public static let dtColorSurfaceInfo = UIColor(red: 0.000, green: 0.078, blue: 0.161, alpha: 1)
    public static let dtColorSurfaceInfoInverted = UIColor(red: 0.918, green: 0.949, blue: 0.980, alpha: 1)
    public static let dtColorSurfaceInfoOpaque = UIColor(red: 0.000, green: 0.078, blue: 0.161, alpha: 0.400)
    public static let dtColorSurfaceInfoOpaqueInverted = UIColor(red: 0.918, green: 0.949, blue: 0.980, alpha: 0.600)
    public static let dtColorSurfaceInfoStrong = UIColor(red: 0.290, green: 0.663, blue: 0.918, alpha: 1)
    public static let dtColorSurfaceInfoStrongInverted = UIColor(red: 0.090, green: 0.408, blue: 0.776, alpha: 1)
    public static let dtColorSurfaceInfoSubtle = UIColor(red: 0.000, green: 0.047, blue: 0.098, alpha: 1)
    public static let dtColorSurfaceInfoSubtleInverted = UIColor(red: 0.961, green: 0.976, blue: 0.992, alpha: 1)
    public static let dtColorSurfaceInfoSubtleOpaque = UIColor(red: 0.004, green: 0.043, blue: 0.086, alpha: 0.702)
    public static let dtColorSurfaceInfoSubtleOpaqueInverted = UIColor(red: 0.961, green: 0.976, blue: 0.992, alpha: 0.659)
    public static let dtColorSurfaceModerate = UIColor(red: 0.239, green: 0.239, blue: 0.239, alpha: 1)
    public static let dtColorSurfaceModerateInverted = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtColorSurfaceModerateOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.180)
    public static let dtColorSurfaceModerateOpaqueInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.110)
    public static let dtColorSurfacePrimary = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1)
    public static let dtColorSurfacePrimaryInverted = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtColorSurfacePrimaryOpaque = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 0.902)
    public static let dtColorSurfacePrimaryOpaqueInverted = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.851)
    public static let dtColorSurfaceSecondary = UIColor(red: 0.122, green: 0.122, blue: 0.122, alpha: 1)
    public static let dtColorSurfaceSecondaryInverted = UIColor(red: 0.976, green: 0.976, blue: 0.976, alpha: 1)
    public static let dtColorSurfaceSecondaryOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.031)
    public static let dtColorSurfaceSecondaryOpaqueInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.039)
    public static let dtColorSurfaceStrong = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtColorSurfaceStrongInverted = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let dtColorSurfaceStrongOpaque = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.741)
    public static let dtColorSurfaceStrongOpaqueInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.671)
    public static let dtColorSurfaceSuccess = UIColor(red: 0.004, green: 0.153, blue: 0.090, alpha: 1)
    public static let dtColorSurfaceSuccessInverted = UIColor(red: 0.929, green: 0.976, blue: 0.922, alpha: 1)
    public static let dtColorSurfaceSuccessOpaque = UIColor(red: 0.000, green: 0.310, blue: 0.180, alpha: 0.278)
    public static let dtColorSurfaceSuccessOpaqueInverted = UIColor(red: 0.859, green: 1.000, blue: 0.663, alpha: 0.302)
    public static let dtColorSurfaceSuccessStrong = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtColorSurfaceSuccessStrongInverted = UIColor(red: 0.192, green: 0.698, blue: 0.216, alpha: 1)
    public static let dtColorSurfaceSuccessSubtle = UIColor(red: 0.004, green: 0.078, blue: 0.043, alpha: 1)
    public static let dtColorSurfaceSuccessSubtleInverted = UIColor(red: 0.965, green: 0.988, blue: 0.961, alpha: 1)
    public static let dtColorSurfaceSuccessSubtleOpaque = UIColor(red: 0.000, green: 0.082, blue: 0.051, alpha: 0.600)
    public static let dtColorSurfaceSuccessSubtleOpaqueInverted = UIColor(red: 0.965, green: 0.988, blue: 0.961, alpha: 0.659)
    public static let dtColorSurfaceWarning = UIColor(red: 0.325, green: 0.196, blue: 0.016, alpha: 1)
    public static let dtColorSurfaceWarningInverted = UIColor(red: 1.000, green: 0.957, blue: 0.800, alpha: 1)
    public static let dtColorSurfaceWarningOpaque = UIColor(red: 0.506, green: 0.314, blue: 0.031, alpha: 0.549)
    public static let dtColorSurfaceWarningOpaqueInverted = UIColor(red: 1.000, green: 0.910, blue: 0.612, alpha: 0.502)
    public static let dtColorSurfaceWarningStrong = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtColorSurfaceWarningStrongInverted = UIColor(red: 1.000, green: 0.741, blue: 0.282, alpha: 1)
    public static let dtColorSurfaceWarningSubtle = UIColor(red: 0.173, green: 0.106, blue: 0.008, alpha: 1)
    public static let dtColorSurfaceWarningSubtleInverted = UIColor(red: 1.000, green: 0.980, blue: 0.898, alpha: 1)
    public static let dtColorSurfaceWarningSubtleOpaque = UIColor(red: 0.173, green: 0.106, blue: 0.008, alpha: 0.702)
    public static let dtColorSurfaceWarningSubtleOpaqueInverted = UIColor(red: 1.000, green: 0.980, blue: 0.898, alpha: 0.302)
    public static let dtIconSize100 = CGFloat(10.00) * 0.8 * 1.5
    public static let dtIconSize200 = CGFloat(10.00) * 0.8 * 1.75
    public static let dtIconSize300 = CGFloat(10.00) * 0.8 * 2.25
    public static let dtIconSize400 = CGFloat(10.00) * 0.8 * 2.5
    public static let dtIconSize500 = CGFloat(10.00) * 0.8 * 3
    public static let dtIconSize600 = CGFloat(10.00) * 0.8 * 4
    public static let dtIconSize700 = CGFloat(10.00) * 0.8 * 4.75
    public static let dtIconSize800 = CGFloat(10.00) * 0.8 * 6
    public static let dtIconSizeBorder100 = CGFloat(1.00)
    public static let dtIconSizeBorder200 = CGFloat(1.00) * 1.25
    public static let dtIconSizeBorder300 = CGFloat(1.00) * 1.5
    public static let dtIconSizeBorder400 = CGFloat(1.00) * 1.75
    public static let dtIconSizeBorder500 = CGFloat(1.00) * 1.75
    public static let dtIconSizeBorder600 = CGFloat(1.00) * 2.5
    public static let dtIconSizeBorder700 = CGFloat(1.00) * 2.75
    public static let dtIconSizeBorder800 = CGFloat(1.00) * 3.5
    public static let dtInputsColorBackgroundDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.031)
    public static let dtInputsColorBackgroundDisabled = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.180)
    public static let dtInputsColorBackgroundFocus = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1)
    public static let dtInputsColorBorderCritical = UIColor(red: 1.000, green: 0.443, blue: 0.435, alpha: 1)
    public static let dtInputsColorBorderDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.220)
    public static let dtInputsColorBorderDisabled = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtInputsColorBorderFocus = UIColor(red: 0.231, green: 0.588, blue: 0.875, alpha: 1)
    public static let dtInputsColorBorderHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.361)
    public static let dtInputsColorBorderSuccess = UIColor(red: 0.820, green: 1.000, blue: 0.463, alpha: 1)
    public static let dtInputsColorBorderWarning = UIColor(red: 1.000, green: 0.859, blue: 0.502, alpha: 1)
    public static let dtInputsColorForegroundDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtInputsColorForegroundDisabled = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtInputsColorForegroundPlaceholder = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtInputsFontSizeLg = CGFloat(10.00) * 1.9
    public static let dtInputsFontSizeMd = CGFloat(10.00) * 1.5
    public static let dtInputsFontSizeSm = CGFloat(10.00) * 1.2
    public static let dtInputsFontSizeXl = CGFloat(10.00) * 2.7
    public static let dtInputsFontSizeXs = CGFloat(10.00) * 1.2
    public static let dtInputsFontWeightLg = 400
    public static let dtInputsFontWeightMd = 400
    public static let dtInputsFontWeightSm = 400
    public static let dtInputsFontWeightXl = 400
    public static let dtInputsFontWeightXs = 400
    public static let dtInputsLineHeightLg = CGFloat(120.00)
    public static let dtInputsLineHeightMd = CGFloat(120.00)
    public static let dtInputsLineHeightSm = CGFloat(120.00)
    public static let dtInputsLineHeightXl = CGFloat(120.00)
    public static let dtInputsLineHeightXs = CGFloat(120.00)
    public static let dtInputsSizeBorderDefault = CGFloat(1.50)
    public static let dtInputsSizeBorderStatus = CGFloat(2.00)
    public static let dtInputsSizeRadiusLg = CGFloat(12.00)
    public static let dtInputsSizeRadiusMd = CGFloat(8.00)
    public static let dtInputsSizeRadiusSm = CGFloat(8.00)
    public static let dtInputsSizeRadiusXl = CGFloat(16.00)
    public static let dtInputsSizeRadiusXs = CGFloat(4.00)
    public static let dtPresenceColorAvailable = UIColor(red: 0.682, green: 0.984, blue: 0.235, alpha: 1)
    public static let dtPresenceColorBusy = UIColor(red: 0.918, green: 0.561, blue: 0.027, alpha: 1)
    public static let dtPresenceColorOffline = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtPresenceColorUnavailable = UIColor(red: 1.000, green: 0.075, blue: 0.337, alpha: 1)
    public static let dtRadioColorBackgroundChecked = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtRadioColorBorderChecked = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtRadioColorBorderUnchecked = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.361)
    public static let dtRadioColorBorderUncheckedHover = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.502)
    public static let dtRadioColorForegroundChecked = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtRadioColorForegroundDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let dtRadioSizeHeight = CGFloat(16.00)
    public static let dtRadioSizeRadius = CGFloat(50.00)
    public static let dtRadioSizeWidth = CGFloat(16.00)
    public static let dtShellActionColorBackgroundMutedActive = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.071)
    public static let dtShellActionColorBackgroundMutedDefault = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.051)
    public static let dtShellActionColorBackgroundMutedHover = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.102)
    public static let dtShellActionColorBackgroundMutedSelected = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.071)
    public static let dtShellActionColorBackgroundPrimaryActive = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.161)
    public static let dtShellActionColorBackgroundPrimaryDefault = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0)
    public static let dtShellActionColorBackgroundPrimaryHover = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.102)
    public static let dtShellActionColorBackgroundPrimarySelected = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.129)
    public static let dtShellActionColorBackgroundSecondaryActive = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.161)
    public static let dtShellActionColorBackgroundSecondaryDefault = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0)
    public static let dtShellActionColorBackgroundSecondaryHover = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.102)
    public static let dtShellActionColorBackgroundSecondarySelected = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 0.129)
    public static let dtShellActionColorForegroundMutedActive = UIColor(red: 0.541, green: 0.541, blue: 0.541, alpha: 0.600)
    public static let dtShellActionColorForegroundMutedDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.600)
    public static let dtShellActionColorForegroundMutedHover = UIColor(red: 0.541, green: 0.541, blue: 0.541, alpha: 0.600)
    public static let dtShellActionColorForegroundMutedSelected = UIColor(red: 0.361, green: 0.361, blue: 0.361, alpha: 0.600)
    public static let dtShellActionColorForegroundPrimaryDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.859)
    public static let dtShellActionColorForegroundPrimaryDisabled = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.569)
    public static let dtShellActionColorForegroundPrimaryStrong = UIColor(red: 0.980, green: 0.980, blue: 0.980, alpha: 1)
    public static let dtShellActionColorForegroundSecondaryDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.859)
    public static let dtShellActionColorForegroundSecondaryDisabled = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.569)
    public static let dtShellActionColorForegroundTertiaryDefault = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.722)
    public static let dtShellBaseActionColorBackgroundMuted = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 1)
    public static let dtShellBaseActionColorBackgroundPrimary = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 1)
    public static let dtShellBaseActionColorBackgroundSecondary = UIColor(red: 0.396, green: 0.192, blue: 0.557, alpha: 1)
    public static let dtShellBaseColorAccent = UIColor(red: 0.886, green: 0.667, blue: 0.898, alpha: 1)
    public static let dtShellBaseColorBorder = UIColor(red: 0.039, green: 0.000, blue: 0.161, alpha: 1)
    public static let dtShellBaseColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtShellBaseColorStatusAway = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtShellBaseColorStatusCritical = UIColor(red: 1.000, green: 0.255, blue: 0.357, alpha: 1)
    public static let dtShellBaseColorStatusPositive = UIColor(red: 0.518, green: 0.933, blue: 0.043, alpha: 1)
    public static let dtShellBaseColorStatusWarning = UIColor(red: 1.000, green: 0.741, blue: 0.282, alpha: 1)
    public static let dtShellBaseColorSurface = UIColor(red: 0.063, green: 0.008, blue: 0.173, alpha: 1)
    public static let dtShellColorBorderBase = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let dtShellColorBorderDefault = UIColor(red: 0.039, green: 0.000, blue: 0.161, alpha: 0.180)
    public static let dtShellColorBorderSubtle = UIColor(red: 0.039, green: 0.000, blue: 0.161, alpha: 0.149)
    public static let dtShellColorForegroundCritical = UIColor(red: 1.000, green: 0.369, blue: 0.455, alpha: 1)
    public static let dtShellColorForegroundDisabled = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.569)
    public static let dtShellColorForegroundMuted = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.600)
    public static let dtShellColorForegroundPositive = UIColor(red: 0.518, green: 0.933, blue: 0.043, alpha: 1)
    public static let dtShellColorForegroundPrimary = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtShellColorForegroundSecondary = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.859)
    public static let dtShellColorForegroundStrong = UIColor(red: 0.980, green: 0.980, blue: 0.980, alpha: 1)
    public static let dtShellColorForegroundTertiary = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.722)
    public static let dtShellColorForegroundWarning = UIColor(red: 1.000, green: 0.780, blue: 0.388, alpha: 1)
    public static let dtShellColorSurfaceDefault = UIColor(red: 0.063, green: 0.008, blue: 0.173, alpha: 1)
    public static let dtShellLogoColorStar = UIColor(red: 0.565, green: 0.443, blue: 0.988, alpha: 1)
    public static let dtShellLogoColorWordmark = UIColor(red: 0.976, green: 0.965, blue: 1.000, alpha: 1)
    public static let dtShellMentionColorForegroundPrimary = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtShellMentionColorForegroundSecondary = UIColor(red: 0.090, green: 0.090, blue: 0.090, alpha: 1)
    public static let dtShellMentionColorSurfacePrimary = UIColor(red: 0.886, green: 0.667, blue: 0.898, alpha: 1)
    public static let dtShellMentionColorSurfaceSecondary = UIColor(red: 0.965, green: 0.882, blue: 0.965, alpha: 1)
    public static let dtShellPresenceColorAvailable = UIColor(red: 0.518, green: 0.933, blue: 0.043, alpha: 1)
    public static let dtShellPresenceColorBusy = UIColor(red: 1.000, green: 0.741, blue: 0.282, alpha: 1)
    public static let dtShellPresenceColorOffline = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtShellPresenceColorUnavailable = UIColor(red: 1.000, green: 0.255, blue: 0.357, alpha: 1)
    public static let dtSizeBorderFocus = CGFloat(2.00) + CGFloat(1.00)
    public static let dtThemeColorBase = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtThemeMentionColorBackground = UIColor(red: 0.733, green: 0.651, blue: 0.988, alpha: 1)
    public static let dtThemeMentionColorBackgroundStrong = UIColor(red: 0.961, green: 0.941, blue: 1.000, alpha: 1)
    public static let dtThemeMentionColorForeground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtThemeMentionColorForegroundStrong = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let dtThemePresenceColorBackgroundAvailable = UIColor(red: 0.518, green: 0.933, blue: 0.043, alpha: 1)
    public static let dtThemePresenceColorBackgroundBusy = UIColor(red: 1.000, green: 0.741, blue: 0.282, alpha: 1)
    public static let dtThemePresenceColorBackgroundBusyUnavailable = UIColor(red: 1.000, green: 0.255, blue: 0.357, alpha: 1)
    public static let dtThemePresenceColorBackgroundOffline = UIColor(red: 0.502, green: 0.502, blue: 0.502, alpha: 1)
    public static let dtThemeSidebarColorBackground = UIColor(red: 0.122, green: 0.122, blue: 0.122, alpha: 1)
    public static let dtThemeSidebarColorForeground = UIColor(red: 0.780, green: 0.780, blue: 0.780, alpha: 1)
    public static let dtThemeSidebarColorForegroundUnread = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtThemeSidebarIconColorForeground = UIColor(red: 0.780, green: 0.780, blue: 0.780, alpha: 1)
    public static let dtThemeSidebarRowColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0)
    public static let dtThemeSidebarRowColorBackgroundActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.149)
    public static let dtThemeSidebarRowColorBackgroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.102)
    public static let dtThemeSidebarSectionColorForeground = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtThemeSidebarSelectedRowColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.122)
    public static let dtThemeSidebarSelectedRowColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtThemeSidebarStatusColorForeground = UIColor(red: 0.690, green: 0.690, blue: 0.690, alpha: 1)
    public static let dtThemeTopbarButtonColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0)
    public static let dtThemeTopbarButtonColorBackgroundActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.102)
    public static let dtThemeTopbarButtonColorBackgroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.149)
    public static let dtThemeTopbarButtonColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.651)
    public static let dtThemeTopbarButtonColorForegroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 1)
    public static let dtThemeTopbarColorBackground = UIColor(red: 0.122, green: 0.122, blue: 0.122, alpha: 1)
    public static let dtThemeTopbarColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.800)
    public static let dtThemeTopbarFieldColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.051)
    public static let dtThemeTopbarFieldColorBackgroundHover = UIColor(red: 0.082, green: 0.082, blue: 0.082, alpha: 1)
    public static let dtThemeTopbarFieldColorBorder = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0)
    public static let dtThemeTopbarFieldColorBorderActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.200)
    public static let dtThemeTopbarFieldColorBorderHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.102)
    public static let dtThemeTopbarFieldColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.502)
    public static let dtThemeTopbarFieldColorForegroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.749)
    public static let dtThemeTopbarProfileColorBackground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.051)
    public static let dtThemeTopbarProfileColorBackgroundActive = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.141)
    public static let dtThemeTopbarProfileColorBackgroundHover = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.102)
    public static let dtThemeTopbarProfileColorBackgroundInverted = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.749)
    public static let dtThemeTopbarProfileColorForeground = UIColor(red: 0.902, green: 0.902, blue: 0.902, alpha: 0.800)
    public static let dtThemeTopbarProfileColorForegroundInverted = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.749)
    public static let dtTypographyBodyMdCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyBodyMdCompactFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyBodyMdCompactFontWeight = 400
    public static let dtTypographyBodyMdCompactLineHeight = CGFloat(140.00)
    public static let dtTypographyBodyMdCompactTextCase = "none"
    public static let dtTypographyBodyMdFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyBodyMdFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyBodyMdFontWeight = 400
    public static let dtTypographyBodyMdLineHeight = CGFloat(160.00)
    public static let dtTypographyBodyMdTextCase = "none"
    public static let dtTypographyBodySmCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyBodySmCompactFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyBodySmCompactFontWeight = 400
    public static let dtTypographyBodySmCompactLineHeight = CGFloat(120.00)
    public static let dtTypographyBodySmCompactTextCase = "none"
    public static let dtTypographyBodySmFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyBodySmFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyBodySmFontWeight = 400
    public static let dtTypographyBodySmLineHeight = CGFloat(140.00)
    public static let dtTypographyBodySmTextCase = "none"
    public static let dtTypographyButtonLgFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyButtonLgFontSize = CGFloat(10.00) * 1.9
    public static let dtTypographyButtonLgFontWeight = 500
    public static let dtTypographyButtonLgLineHeight = CGFloat(120.00)
    public static let dtTypographyButtonMdFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyButtonMdFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyButtonMdFontWeight = 600
    public static let dtTypographyButtonMdLineHeight = CGFloat(120.00)
    public static let dtTypographyButtonSmFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyButtonSmFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyButtonSmFontWeight = 600
    public static let dtTypographyButtonSmLineHeight = CGFloat(120.00)
    public static let dtTypographyButtonXlFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyButtonXlFontSize = CGFloat(10.00) * 2.7
    public static let dtTypographyButtonXlFontWeight = 400
    public static let dtTypographyButtonXlLineHeight = CGFloat(120.00)
    public static let dtTypographyButtonXsFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyButtonXsFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyButtonXsFontWeight = 600
    public static let dtTypographyButtonXsLineHeight = CGFloat(120.00)
    public static let dtTypographyCodeMdFontFamily = UIFont.monospacedSystemFont(ofSize: 15, weight: .regular)
    public static let dtTypographyCodeMdFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyCodeMdFontWeight = 400
    public static let dtTypographyCodeMdLineHeight = CGFloat(120.00)
    public static let dtTypographyCodeMdTextCase = "none"
    public static let dtTypographyCodeSmFontFamily = UIFont.monospacedSystemFont(ofSize: 15, weight: .regular)
    public static let dtTypographyCodeSmFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyCodeSmFontWeight = 400
    public static let dtTypographyCodeSmLineHeight = CGFloat(120.00)
    public static let dtTypographyCodeSmTextCase = "none"
    public static let dtTypographyHeadlineEyebrowFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineEyebrowFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyHeadlineEyebrowFontWeight = 400
    public static let dtTypographyHeadlineEyebrowLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineEyebrowTextCase = "uppercase"
    public static let dtTypographyHeadlineLgCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineLgCompactFontSize = CGFloat(10.00) * 1.9
    public static let dtTypographyHeadlineLgCompactFontWeight = 700
    public static let dtTypographyHeadlineLgCompactLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineLgCompactTextCase = "none"
    public static let dtTypographyHeadlineLgFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineLgFontSize = CGFloat(10.00) * 1.9
    public static let dtTypographyHeadlineLgFontWeight = 700
    public static let dtTypographyHeadlineLgLineHeight = CGFloat(160.00)
    public static let dtTypographyHeadlineLgSoftCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineLgSoftCompactFontSize = CGFloat(10.00) * 1.9
    public static let dtTypographyHeadlineLgSoftCompactFontWeight = 500
    public static let dtTypographyHeadlineLgSoftCompactLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineLgSoftCompactTextCase = "none"
    public static let dtTypographyHeadlineLgSoftFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineLgSoftFontSize = CGFloat(10.00) * 1.9
    public static let dtTypographyHeadlineLgSoftFontWeight = 500
    public static let dtTypographyHeadlineLgSoftLineHeight = CGFloat(160.00)
    public static let dtTypographyHeadlineLgSoftTextCase = "none"
    public static let dtTypographyHeadlineLgTextCase = "none"
    public static let dtTypographyHeadlineMdCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineMdCompactFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyHeadlineMdCompactFontWeight = 700
    public static let dtTypographyHeadlineMdCompactLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineMdCompactTextCase = "none"
    public static let dtTypographyHeadlineMdFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineMdFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyHeadlineMdFontWeight = 700
    public static let dtTypographyHeadlineMdLineHeight = CGFloat(160.00)
    public static let dtTypographyHeadlineMdTextCase = "none"
    public static let dtTypographyHeadlineSmCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineSmCompactFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyHeadlineSmCompactFontWeight = 700
    public static let dtTypographyHeadlineSmCompactLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineSmCompactTextCase = "none"
    public static let dtTypographyHeadlineSmFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineSmFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyHeadlineSmFontWeight = 700
    public static let dtTypographyHeadlineSmLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineSmSoftCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineSmSoftCompactFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyHeadlineSmSoftCompactFontWeight = 500
    public static let dtTypographyHeadlineSmSoftCompactLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineSmSoftCompactTextCase = "none"
    public static let dtTypographyHeadlineSmSoftFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineSmSoftFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyHeadlineSmSoftFontWeight = 500
    public static let dtTypographyHeadlineSmSoftLineHeight = CGFloat(140.00)
    public static let dtTypographyHeadlineSmSoftTextCase = "none"
    public static let dtTypographyHeadlineSmTextCase = "none"
    public static let dtTypographyHeadlineXlCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineXlCompactFontSize = CGFloat(10.00) * 2.7
    public static let dtTypographyHeadlineXlCompactFontWeight = 500
    public static let dtTypographyHeadlineXlCompactLineHeight = CGFloat(100.00)
    public static let dtTypographyHeadlineXlCompactTextCase = "none"
    public static let dtTypographyHeadlineXlFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineXlFontSize = CGFloat(10.00) * 2.7
    public static let dtTypographyHeadlineXlFontWeight = 500
    public static let dtTypographyHeadlineXlLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineXlTextCase = "none"
    public static let dtTypographyHeadlineXxlCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineXxlCompactFontSize = CGFloat(10.00) * 3.8
    public static let dtTypographyHeadlineXxlCompactFontWeight = 500
    public static let dtTypographyHeadlineXxlCompactLineHeight = CGFloat(100.00)
    public static let dtTypographyHeadlineXxlCompactTextCase = "none"
    public static let dtTypographyHeadlineXxlFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHeadlineXxlFontSize = CGFloat(10.00) * 3.8
    public static let dtTypographyHeadlineXxlFontWeight = 500
    public static let dtTypographyHeadlineXxlLineHeight = CGFloat(120.00)
    public static let dtTypographyHeadlineXxlTextCase = "none"
    public static let dtTypographyHelperMdFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHelperMdFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyHelperMdFontWeight = 400
    public static let dtTypographyHelperMdLineHeight = CGFloat(140.00)
    public static let dtTypographyHelperMdTextCase = "none"
    public static let dtTypographyHelperSmFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyHelperSmFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyHelperSmFontWeight = 400
    public static let dtTypographyHelperSmLineHeight = CGFloat(120.00)
    public static let dtTypographyHelperSmTextCase = "none"
    public static let dtTypographyInputsLgFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyInputsLgFontSize = CGFloat(10.00) * 1.9
    public static let dtTypographyInputsLgFontWeight = 400
    public static let dtTypographyInputsLgLineHeight = CGFloat(120.00)
    public static let dtTypographyInputsMdFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyInputsMdFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyInputsMdFontWeight = 400
    public static let dtTypographyInputsMdLineHeight = CGFloat(120.00)
    public static let dtTypographyInputsSmFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyInputsSmFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyInputsSmFontWeight = 400
    public static let dtTypographyInputsSmLineHeight = CGFloat(120.00)
    public static let dtTypographyInputsXlFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyInputsXlFontSize = CGFloat(10.00) * 2.7
    public static let dtTypographyInputsXlFontWeight = 400
    public static let dtTypographyInputsXlLineHeight = CGFloat(120.00)
    public static let dtTypographyInputsXsFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyInputsXsFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyInputsXsFontWeight = 400
    public static let dtTypographyInputsXsLineHeight = CGFloat(120.00)
    public static let dtTypographyLabelMdCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelMdCompactFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyLabelMdCompactFontWeight = 600
    public static let dtTypographyLabelMdCompactLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelMdCompactTextCase = "none"
    public static let dtTypographyLabelMdFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelMdFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyLabelMdFontWeight = 600
    public static let dtTypographyLabelMdLineHeight = CGFloat(160.00)
    public static let dtTypographyLabelMdPlainCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelMdPlainCompactFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyLabelMdPlainCompactFontWeight = 400
    public static let dtTypographyLabelMdPlainCompactLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelMdPlainCompactTextCase = "none"
    public static let dtTypographyLabelMdPlainFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelMdPlainFontSize = CGFloat(10.00) * 1.5
    public static let dtTypographyLabelMdPlainFontWeight = 400
    public static let dtTypographyLabelMdPlainLineHeight = CGFloat(160.00)
    public static let dtTypographyLabelMdPlainTextCase = "none"
    public static let dtTypographyLabelMdTextCase = "none"
    public static let dtTypographyLabelSmCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelSmCompactFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyLabelSmCompactFontWeight = 600
    public static let dtTypographyLabelSmCompactLineHeight = CGFloat(120.00)
    public static let dtTypographyLabelSmCompactTextCase = "none"
    public static let dtTypographyLabelSmFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelSmFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyLabelSmFontWeight = 600
    public static let dtTypographyLabelSmLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelSmPlainCompactFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelSmPlainCompactFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyLabelSmPlainCompactFontWeight = 400
    public static let dtTypographyLabelSmPlainCompactLineHeight = CGFloat(120.00)
    public static let dtTypographyLabelSmPlainCompactTextCase = "none"
    public static let dtTypographyLabelSmPlainFontFamily = UIFont.systemFont(ofSize: 15)
    public static let dtTypographyLabelSmPlainFontSize = CGFloat(10.00) * 1.2
    public static let dtTypographyLabelSmPlainFontWeight = 400
    public static let dtTypographyLabelSmPlainLineHeight = CGFloat(140.00)
    public static let dtTypographyLabelSmPlainTextCase = "none"
    public static let dtTypographyLabelSmTextCase = "none"
}